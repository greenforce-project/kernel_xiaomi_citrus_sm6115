7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    1) #include <dt-bindings/interrupt-controller/arm-gic.h>
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    2) #include <dt-bindings/clock/qcom,rpmcc.h>
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    3) #include <dt-bindings/clock/qcom,dispcc-bengal.h>
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    4) #include <dt-bindings/clock/qcom,gcc-bengal.h>
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    5) #include <dt-bindings/clock/qcom,gpucc-bengal.h>
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    6) #include <dt-bindings/spmi/spmi.h>
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    7) #include <dt-bindings/regulator/qcom,rpmh-regulator-levels.h>
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    8) #include <dt-bindings/msm/msm-bus-ids.h>
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800    9) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   10) #define MHZ_TO_MBPS(mhz, w) ((mhz * 1000000 * w) / (1024 * 1024))
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   11) #define BW_OPP_ENTRY(mhz, w) opp-mhz {opp-hz = /bits/ 64 <MHZ_TO_MBPS(mhz, w)>;}
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   12) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   13) #define BW_OPP_ENTRY_DDR(mhz, w, ddrtype) opp-mhz {\
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   14) 				opp-hz = /bits/ 64 <MHZ_TO_MBPS(mhz, w)>;\
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   15) 				opp-supported-hw = <ddrtype>;}
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   16) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   17) #define DDR_TYPE_LPDDR3		5
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   18) #define DDR_TYPE_LPDDR4X	7
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   19) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   20) / {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   21) 	model = "Qualcomm Technologies, Inc. BENGAL";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   22) 	compatible = "qcom,bengal";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   23) 	qcom,msm-id = <417 0x10000>, <444 0x10000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   24) 	interrupt-parent = <&wakegic>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   25) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   26) 	#address-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   27) 	#size-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   28) 	memory { device_type = "memory"; reg = <0 0 0 0>; };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   29) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   30) 	mem-offline {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   31) 		compatible = "qcom,mem-offline";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   32) 		offline-sizes = <0x1 0x40000000 0x0 0x40000000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   33) 				<0x1 0xc0000000 0x0 0x80000000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   34) 				<0x2 0xc0000000 0x1 0x40000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   35) 		granule = <512>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   36) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   37) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   38) 	aliases {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   39) 		sdhc1 = &sdhc_1; /* SDC1 eMMC slot */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   40) 		sdhc2 = &sdhc_2; /* SDC2 SD Card slot */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   41) 		swr0 = &swr0;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   42) 		swr1 = &swr1;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   43) 		ufshc1 = &ufshc_mem; /* Embedded UFS slot */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   44) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   45) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   46) 	cpus {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   47) 		#address-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   48) 		#size-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   49) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   50) 		CPU0: cpu@0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   51) 			device_type = "cpu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   52) 			compatible = "arm,armv8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   53) 			reg = <0x0 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   54) 			capacity-dmips-mhz = <1024>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   55) 			dynamic-power-coefficient = <100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   56) 			enable-method = "psci";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   57) 			next-level-cache = <&L2_0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   58) 			qcom,freq-domain = <&cpufreq_hw 0 7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   59) 			qcom,lmh-dcvs = <&lmh_dcvs0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   60) 			#cooling-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   61) 			L2_0: l2-cache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   62) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   63) 				cache-level = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   64) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   65) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   66) 			L1_I_0: l1-icache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   67) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   68) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   69) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   70) 			L1_D_0: l1-dcache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   71) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   72) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   73) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   74) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   75) 		CPU1: cpu@1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   76) 			device_type = "cpu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   77) 			compatible = "arm,armv8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   78) 			reg = <0x0 0x1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   79) 			capacity-dmips-mhz = <1024>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   80) 			dynamic-power-coefficient = <100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   81) 			enable-method = "psci";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   82) 			next-level-cache = <&L2_0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   83) 			qcom,freq-domain = <&cpufreq_hw 0 7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   84) 			qcom,lmh-dcvs = <&lmh_dcvs0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   85) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   86) 			L1_I_1: l1-icache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   87) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   88) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   89) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   90) 			L1_D_1: l1-dcache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   91) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   92) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   93) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   94) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   95) 		CPU2: cpu@2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   96) 			device_type = "cpu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   97) 			compatible = "arm,armv8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   98) 			reg = <0x0 0x2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800   99) 			capacity-dmips-mhz = <1024>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  100) 			dynamic-power-coefficient = <100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  101) 			enable-method = "psci";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  102) 			next-level-cache = <&L2_0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  103) 			qcom,freq-domain = <&cpufreq_hw 0 7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  104) 			qcom,lmh-dcvs = <&lmh_dcvs0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  105) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  106) 			L1_I_2: l1-icache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  107) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  108) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  109) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  110) 			L1_D_2: l1-dcache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  111) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  112) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  113) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  114) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  115) 		CPU3: cpu@3 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  116) 			device_type = "cpu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  117) 			compatible = "arm,armv8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  118) 			reg = <0x0 0x3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  119) 			capacity-dmips-mhz = <1024>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  120) 			dynamic-power-coefficient = <100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  121) 			enable-method = "psci";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  122) 			next-level-cache = <&L2_0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  123) 			qcom,freq-domain = <&cpufreq_hw 0 7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  124) 			qcom,lmh-dcvs = <&lmh_dcvs0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  125) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  126) 			L1_I_3: l1-icache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  127) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  128) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  129) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  130) 			L1_D_3: l1-dcache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  131) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  132) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  133) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  134) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  135) 		CPU4: cpu@100 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  136) 			device_type = "cpu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  137) 			compatible = "arm,armv8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  138) 			reg = <0x0 0x100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  139) 			enable-method = "psci";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  140) 			capacity-dmips-mhz = <1638>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  141) 			dynamic-power-coefficient = <282>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  142) 			next-level-cache = <&L2_1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  143) 			qcom,freq-domain = <&cpufreq_hw 1 7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  144) 			qcom,lmh-dcvs = <&lmh_dcvs1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  145) 			#cooling-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  146) 			L2_1: l2-cache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  147) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  148) 				cache-level = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  149) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  150) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  151) 			L1_I_100: l1-icache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  152) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  153) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  154) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  155) 			L1_D_100: l1-dcache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  156) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  157) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  158) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  159) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  160) 		CPU5: cpu@101 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  161) 			device_type = "cpu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  162) 			compatible = "arm,armv8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  163) 			reg = <0x0 0x101>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  164) 			capacity-dmips-mhz = <1638>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  165) 			dynamic-power-coefficient = <282>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  166) 			enable-method = "psci";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  167) 			next-level-cache = <&L2_1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  168) 			qcom,freq-domain = <&cpufreq_hw 1 7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  169) 			qcom,lmh-dcvs = <&lmh_dcvs1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  170) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  171) 			L1_I_101: l1-icache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  172) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  173) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  174) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  175) 			L1_D_101: l1-dcache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  176) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  177) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  178) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  179) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  180) 		CPU6: cpu@102 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  181) 			device_type = "cpu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  182) 			compatible = "arm,armv8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  183) 			reg = <0x0 0x102>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  184) 			capacity-dmips-mhz = <1638>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  185) 			dynamic-power-coefficient = <282>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  186) 			enable-method = "psci";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  187) 			next-level-cache = <&L2_1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  188) 			qcom,freq-domain = <&cpufreq_hw 1 7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  189) 			qcom,lmh-dcvs = <&lmh_dcvs1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  190) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  191) 			L1_I_102: l1-icache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  192) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  193) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  194) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  195) 			L1_D_102: l1-dcache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  196) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  197) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  198) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  199) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  200) 		CPU7: cpu@103 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  201) 			device_type = "cpu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  202) 			compatible = "arm,armv8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  203) 			reg = <0x0 0x103>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  204) 			capacity-dmips-mhz = <1638>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  205) 			dynamic-power-coefficient = <282>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  206) 			enable-method = "psci";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  207) 			next-level-cache = <&L2_1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  208) 			qcom,freq-domain = <&cpufreq_hw 1 7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  209) 			qcom,lmh-dcvs = <&lmh_dcvs1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  210) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  211) 			L1_I_103: l1-icache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  212) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  213) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  214) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  215) 			L1_D_103: l1-dcache {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  216) 				compatible = "arm,arch-cache";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  217) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  218) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  219) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  220) 		cpu-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  221) 			cluster0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  222) 				core0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  223) 					cpu = <&CPU0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  224) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  225) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  226) 				core1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  227) 					cpu = <&CPU1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  228) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  229) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  230) 				core2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  231) 					cpu = <&CPU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  232) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  233) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  234) 				core3 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  235) 					cpu = <&CPU3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  236) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  237) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  238) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  239) 			cluster1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  240) 				core0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  241) 					cpu = <&CPU4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  242) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  243) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  244) 				core1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  245) 					cpu = <&CPU5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  246) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  247) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  248) 				core2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  249) 					cpu = <&CPU6>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  250) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  251) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  252) 				core3 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  253) 					cpu = <&CPU7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  254) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  255) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  256) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  257) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  258) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  259) 	psci {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  260) 		compatible = "arm,psci-1.0";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  261) 		method = "smc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  262) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  263) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  264) 	firmware: firmware {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  265) 		android {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  266) 			compatible = "android,firmware";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  267) 			vbmeta {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  268) 				compatible="android,vbmeta";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  269) 				parts = "vbmeta,boot,system,vendor,dtbo,recovery";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  270) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  271) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  272) 			fstab {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  273) 				compatible = "android,fstab";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  274) 				vendor {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  275) 					compatible = "android,vendor";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  276) 					dev = "/dev/block/platform/soc/4744000.sdhci/by-name/vendor";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  277) 					type = "ext4";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  278) 					mnt_flags = "ro,barrier=1,discard";
460650d2 (<lizheng6@huaqin.com>     2020-07-25 22:11:12 +0800  279) 					fsmgr_flags = "wait,avb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  280) 					status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  281) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  282) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  283) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  284) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  285) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  286) 	reserved_memory: reserved-memory {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  287) 		#address-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  288) 		#size-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  289) 		ranges;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  290) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  291) 		hyp_mem: hyp_region@45700000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  292) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  293) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  294) 			reg = <0x0 0x45700000 0x0 0x600000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  295) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  296) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  297) 		xbl_aop_mem: xbl_aop_region@45e00000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  298) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  299) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  300) 			reg = <0x0 0x45e00000 0x0 0x140000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  301) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  302) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  303) 		sec_apps_mem: sec_apps_region@45fff000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  304) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  305) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  306) 			reg = <0x0 0x45fff000 0x0 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  307) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  308) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  309) 		smem_mem: smem_region@46000000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  310) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  311) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  312) 			reg = <0x0 0x46000000 0x0 0x200000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  313) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  314) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  315) 		removed_mem: removed_region@60000000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  316) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  317) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  318) 			reg = <0x0 0x60000000 0x0 0x3900000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  319) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  320) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  321) 		pil_modem_mem: modem_region@4ab00000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  322) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  323) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  324) 			reg = <0x0 0x4ab00000 0x0 0x6900000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  325) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  326) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  327) 		pil_video_mem: pil_video_region@51400000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  328) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  329) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  330) 			reg = <0x0 0x51400000 0x0 0x500000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  331) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  332) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  333) 		wlan_msa_mem: wlan_msa_region@51900000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  334) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  335) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  336) 			reg = <0x0 0x51900000 0x0 0x100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  337) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  338) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  339) 		pil_cdsp_mem: cdsp_regions@51a00000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  340) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  341) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  342) 			reg = <0x0 0x51a00000 0x0 0x1e00000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  343) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  344) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  345) 		pil_adsp_mem: pil_adsp_region@53800000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  346) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  347) 			no-map;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  348) <<<<<<< HEAD
0ccaaf5d (<dongweichang@huaqin.com> 2020-08-07 21:20:53 +0800  349) 			reg = <0x0 0x93900000 0x0 0x2200000>;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  350) =======
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  351) 			reg = <0x0 0x53800000 0x0 0x1e00000>;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  352) >>>>>>> Snapdragon_Mid_2020SPF1.0-baseline
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  353) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  354) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  355) 		pil_ipa_fw_mem: ipa_fw_region@55600000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  356) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  357) 			no-map;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  358) <<<<<<< HEAD
0ccaaf5d (<dongweichang@huaqin.com> 2020-08-07 21:20:53 +0800  359) 			reg = <0x0 0x95b00000 0x0 0x10000>;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  360) =======
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  361) 			reg = <0x0 0x55600000 0x0 0x10000>;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  362) >>>>>>> Snapdragon_Mid_2020SPF1.0-baseline
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  363) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  364) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  365) 		pil_ipa_gsi_mem: ipa_gsi_region@55610000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  366) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  367) 			no-map;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  368) <<<<<<< HEAD
0ccaaf5d (<dongweichang@huaqin.com> 2020-08-07 21:20:53 +0800  369) 			reg = <0x0 0x95b10000 0x0 0x5000>;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  370) =======
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  371) 			reg = <0x0 0x55610000 0x0 0x5000>;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  372) >>>>>>> Snapdragon_Mid_2020SPF1.0-baseline
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  373) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  374) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  375) 		pil_gpu_mem: gpu_region@55615000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  376) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  377) 			no-map;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  378) <<<<<<< HEAD
0ccaaf5d (<dongweichang@huaqin.com> 2020-08-07 21:20:53 +0800  379) 			reg = <0x0 0x95b15000 0x0 0x2000>;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  380) =======
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  381) 			reg = <0x0 0x55615000 0x0 0x2000>;
00000000 (<not.committed.yet>       2020-08-17 09:49:20 +0800  382) >>>>>>> Snapdragon_Mid_2020SPF1.0-baseline
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  383) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  384) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  385) 		user_contig_mem: user_contig_region {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  386) 			compatible = "shared-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  387) 			alloc-ranges = <0x0 0x00000000 0x0 0xffffffff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  388) 			reusable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  389) 			alignment = <0x0 0x400000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  390) 			size = <0x0 0x1000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  391) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  392) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  393) 		qseecom_mem: qseecom_region {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  394) 			compatible = "shared-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  395) 			alloc-ranges = <0x0 0x00000000 0x0 0xffffffff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  396) 			reusable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  397) 			alignment = <0x0 0x400000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  398) 			size = <0x0 0x1400000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  399) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  400) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  401) 		qseecom_ta_mem: qseecom_ta_region {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  402) 			compatible = "shared-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  403) 			alloc-ranges = <0x0 0x00000000 0x0 0xffffffff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  404) 			reusable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  405) 			alignment = <0x0 0x400000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  406) 			size = <0x0 0x1000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  407) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  408) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  409) 		cdsp_sec_mem: cdsp_sec_regions@46200000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  410) 			compatible = "removed-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  411) 			no-map;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  412) 			reg = <0x0 0x46200000 0x0 0x1e00000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  413) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  414) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  415) 		secure_display_memory: secure_display_region {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  416) 			compatible = "shared-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  417) 			alloc-ranges = <0 0x00000000 0 0xffffffff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  418) 			reusable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  419) 			alignment = <0 0x400000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  420) 			size = <0 0x5c00000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  421) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  422) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  423) 		cont_splash_memory: cont_splash_region@5c000000 {
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  424) 			reg = <0x0 0x5c000000 0x0 0x00f00000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  425) 			label = "cont_splash_region";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  426) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  427) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  428) 		disp_rdump_memory: disp_rdump_region@5c000000 {
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  429) 			reg = <0x0 0x5c000000 0x0 0x00f00000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  430) 			label = "disp_rdump_region";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  431) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  432) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  433) 		dfps_data_memory: dfps_data_region@5cf00000 {
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  434) 			reg = <0x0 0x5cf00000 0x0 0x0100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  435) 			label = "dfps_data_region";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  436) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  437) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  438) 		adsp_mem: adsp_region {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  439) 			compatible = "shared-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  440) 			alloc-ranges = <0 0x00000000 0 0xffffffff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  441) 			reusable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  442) 			alignment = <0 0x400000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  443) 			size = <0 0x800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  444) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  445) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  446) 		dump_mem: mem_dump_region {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  447) 			compatible = "shared-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  448) 			alloc-ranges = <0x0 0x00000000 0x0 0xffffffff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  449) 			reusable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  450) 			size = <0 0x800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  451) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  452) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  453) 		/* global autoconfigured region for contiguous allocations */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  454) 		linux,cma {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  455) 			compatible = "shared-dma-pool";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  456) 			alloc-ranges = <0x0 0x00000000 0x0 0xffffffff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  457) 			reusable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  458) 			alignment = <0x0 0x400000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  459) 			size = <0x0 0x2000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  460) 			linux,cma-default;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  461) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  462) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  463) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  464) 	chosen {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  465) 		bootargs = "rcupdate.rcu_expedited=1 rcu_nocbs=0-7";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  466) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  467) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  468) 	soc: soc { };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  469) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  470) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  471) &soc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  472) 	#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  473) 	#size-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  474) 	ranges = <0 0 0 0xffffffff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  475) 	compatible = "simple-bus";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  476) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  477) 	intc: interrupt-controller@f200000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  478) 		compatible = "arm,gic-v3";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  479) 		#interrupt-cells = <3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  480) 		interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  481) 		interrupt-parent = <&intc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  482) 		#redistributor-regions = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  483) 		redistributor-stride = <0x0 0x20000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  484) 		reg = <0xf200000 0x10000>,     /* GICD */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  485) 		      <0xf300000 0x100000>;    /* GICR * 8 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  486) 		interrupts = <1 9 4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  487) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  488) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  489) 	jtag_mm0: jtagmm@9040000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  490) 		compatible = "qcom,jtagv8-mm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  491) 		reg = <0x9040000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  492) 		reg-names = "etm-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  493) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  494) 		clocks = <&rpmcc RPM_SMD_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  495) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  496) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  497) 		qcom,coresight-jtagmm-cpu = <&CPU0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  498) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  499) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  500) 	jtag_mm1: jtagmm@9140000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  501) 		compatible = "qcom,jtagv8-mm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  502) 		reg = <0x9140000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  503) 		reg-names = "etm-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  504) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  505) 		clocks = <&rpmcc RPM_SMD_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  506) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  507) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  508) 		qcom,coresight-jtagmm-cpu = <&CPU1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  509) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  510) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  511) 	jtag_mm2: jtagmm@9240000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  512) 		compatible = "qcom,jtagv8-mm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  513) 		reg = <0x9240000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  514) 		reg-names = "etm-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  515) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  516) 		clocks = <&rpmcc RPM_SMD_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  517) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  518) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  519) 		qcom,coresight-jtagmm-cpu = <&CPU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  520) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  521) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  522) 	jtag_mm3: jtagmm@9340000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  523) 		compatible = "qcom,jtagv8-mm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  524) 		reg = <0x9340000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  525) 		reg-names = "etm-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  526) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  527) 		clocks = <&rpmcc RPM_SMD_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  528) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  529) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  530) 		qcom,coresight-jtagmm-cpu = <&CPU3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  531) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  532) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  533) 	jtag_mm4: jtagmm@9440000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  534) 		compatible = "qcom,jtagv8-mm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  535) 		reg = <0x9440000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  536) 		reg-names = "etm-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  537) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  538) 		clocks = <&rpmcc RPM_SMD_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  539) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  540) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  541) 		qcom,coresight-jtagmm-cpu = <&CPU4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  542) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  543) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  544) 	jtag_mm5: jtagmm@9540000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  545) 		compatible = "qcom,jtagv8-mm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  546) 		reg = <0x9540000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  547) 		reg-names = "etm-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  548) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  549) 		clocks = <&rpmcc RPM_SMD_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  550) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  551) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  552) 		qcom,coresight-jtagmm-cpu = <&CPU5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  553) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  554) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  555) 	jtag_mm6: jtagmm@9640000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  556) 		compatible = "qcom,jtagv8-mm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  557) 		reg = <0x9640000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  558) 		reg-names = "etm-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  559) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  560) 		clocks = <&rpmcc RPM_SMD_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  561) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  562) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  563) 		qcom,coresight-jtagmm-cpu = <&CPU6>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  564) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  565) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  566) 	jtag_mm7: jtagmm@9740000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  567) 		compatible = "qcom,jtagv8-mm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  568) 		reg = <0x9740000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  569) 		reg-names = "etm-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  570) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  571) 		clocks = <&rpmcc RPM_SMD_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  572) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  573) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  574) 		qcom,coresight-jtagmm-cpu = <&CPU7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  575) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  576) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  577) 	qcom,memshare {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  578) 		compatible = "qcom,memshare";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  579) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  580) 		qcom,client_1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  581) 			compatible = "qcom,memshare-peripheral";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  582) 			qcom,peripheral-size = <0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  583) 			qcom,client-id = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  584) 			qcom,allocate-boot-time;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  585) 			label = "modem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  586) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  587) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  588) 		qcom,client_2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  589) 			compatible = "qcom,memshare-peripheral";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  590) 			qcom,peripheral-size = <0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  591) 			qcom,client-id = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  592) 			label = "modem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  593) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  594) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  595) 		mem_client_3_size: qcom,client_3 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  596) 			compatible = "qcom,memshare-peripheral";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  597) 			qcom,peripheral-size = <0x500000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  598) 			qcom,client-id = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  599) 			qcom,allocate-on-request;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  600) 			label = "modem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  601) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  602) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  603) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  604) 	slim_aud: slim@a5c0000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  605) 		cell-index = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  606) 		compatible = "qcom,slim-ngd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  607) 		reg = <0xa5c0000 0x2c000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  608) 			<0xa584000 0x20000>, <0xa66e000 0x2000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  609) 		reg-names = "slimbus_physical",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  610) 			"slimbus_bam_physical", "slimbus_lpass_mem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  611) 		interrupts = <GIC_SPI 283 IRQ_TYPE_LEVEL_HIGH>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  612) 				<GIC_SPI 284 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  613) 		interrupt-names = "slimbus_irq", "slimbus_bam_irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  614) 		qcom,apps-ch-pipes = <0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  615) 		qcom,ea-pc = <0x360>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  616) 		status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  617) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  618) 		/* Slimbus Slave DT for WCN3990 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  619) 		btfmslim_codec: wcn3990 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  620) 			compatible = "qcom,btfmslim_slave";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  621) 			elemental-addr = [00 01 20 02 17 02];
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  622) 			qcom,btfm-slim-ifd = "btfmslim_slave_ifd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  623) 			qcom,btfm-slim-ifd-elemental-addr = [00 00 20 02 17 02];
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  624) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  625) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  626) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  627) 	wakegic: wake-gic {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  628) 		compatible = "qcom,mpm-gic-bengal", "qcom,mpm-gic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  629) 		interrupts-extended = <&wakegic GIC_SPI 197
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  630) 						IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  631) 		reg = <0x45f01b8 0x1000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  632) 			<0xf011008 0x4>;  /* MSM_APCS_GCC_BASE 4K */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  633) 		reg-names = "vmpm", "ipc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  634) 		qcom,num-mpm-irqs = <96>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  635) 		interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  636) 		interrupt-parent = <&intc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  637) 		#interrupt-cells = <3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  638) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  639) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  640) 	wakegpio: wake-gpio {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  641) 		compatible = "qcom,mpm-gpio";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  642) 		interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  643) 		interrupt-parent = <&intc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  644) 		#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  645) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  646) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  647) 	bluetooth: bt_wcn3990 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  648) 		compatible = "qca,wcn3990";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  649) 		qca,bt-vdd-io-supply =   <&L9A>;  /* IO */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  650) 		qca,bt-vdd-core-supply = <&L17A>; /* RFA */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  651) 		qca,bt-vdd-pa-supply =   <&L23A>; /* CH0 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  652) 		qca,bt-vdd-xtal-supply = <&L16A>; /* XO */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  653) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  654) 		qca,bt-vdd-io-voltage-level = <1700000 1900000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  655) 		qca,bt-vdd-core-voltage-level = <1304000 1304000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  656) 		qca,bt-vdd-pa-voltage-level = <3000000 3312000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  657) 		qca,bt-vdd-xtal-voltage-level = <1700000 1900000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  658) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  659) 		qca,bt-vdd-io-current-level = <1>; /* LPM/PFM */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  660) 		qca,bt-vdd-core-current-level = <1>; /* LPM/PFM */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  661) 		qca,bt-vdd-pa-current-level = <1>; /* LPM/PFM */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  662) 		qca,bt-vdd-xtal-current-level = <1>; /* LPM/PFM */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  663) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  664) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  665) 	timer {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  666) 		compatible = "arm,armv8-timer";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  667) 		interrupts = <1 1 0xf08>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  668) 			     <1 2 0xf08>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  669) 			     <1 3 0xf08>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  670) 			     <1 0 0xf08>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  671) 		clock-frequency = <19200000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  672) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  673) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  674) 	dcc: dcc_v2@1be2000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  675) 		compatible = "qcom,dcc-v2";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  676) 		reg = <0x1be2000 0x1000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  677) 			<0x1bee000 0x2000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  678) 		reg-names = "dcc-base", "dcc-ram-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  679) 		dcc-ram-offset = <0x2000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  680) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  681) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  682) 	timer@f120000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  683) 		#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  684) 		#size-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  685) 		ranges;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  686) 		compatible = "arm,armv7-timer-mem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  687) 		reg = <0xf120000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  688) 		clock-frequency = <19200000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  689) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  690) 		frame@f121000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  691) 			frame-number = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  692) 			interrupts = <0 8 0x4>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  693) 				     <0 7 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  694) 			reg = <0xf121000 0x1000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  695) 			      <0xf122000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  696) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  697) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  698) 		frame@f123000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  699) 			frame-number = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  700) 			interrupts = <0 9 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  701) 			reg = <0xf123000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  702) 			status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  703) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  704) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  705) 		frame@f124000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  706) 			frame-number = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  707) 			interrupts = <0 10 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  708) 			reg = <0xf124000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  709) 			status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  710) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  711) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  712) 		frame@f125000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  713) 			frame-number = <3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  714) 			interrupts = <0 11 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  715) 			reg = <0xf125000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  716) 			status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  717) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  718) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  719) 		frame@f126000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  720) 			frame-number = <4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  721) 			interrupts = <0 12 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  722) 			reg = <0xf126000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  723) 			status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  724) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  725) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  726) 		frame@f127000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  727) 			frame-number = <5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  728) 			interrupts = <0 13 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  729) 			reg = <0xf127000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  730) 			status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  731) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  732) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  733) 		frame@f128000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  734) 			frame-number = <6>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  735) 			interrupts = <0 14 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  736) 			reg = <0xf128000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  737) 			status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  738) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  739) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  740) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  741) 	arm64_cpu_erp {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  742) 		compatible = "arm,arm64-cpu-erp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  743) 		interrupt-names = "pri-dbe-irq",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  744) 				  "sec-dbe-irq",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  745) 				  "pri-ext-irq",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  746) 				  "sec-ext-irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  747) 		interrupts = <0 43 4>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  748) 			     <0 44 4>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  749) 			     <0 41 4>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  750) 			     <0 42 4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  751) 		poll-delay-ms = <5000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  752) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  753) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  754) 	l2cache_pmu {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  755) 		#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  756) 		#size-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  757) 		compatible = "qcom,l2cache-pmu";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  758) 		ranges;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  759) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  760) 		cluster0@f111000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  761) 			cluster-id = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  762) 			interrupts = <GIC_SPI 57 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  763) 			reg = <0xf111000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  764) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  765) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  766) 		cluster1@f011000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  767) 			cluster-id = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  768) 			interrupts = <GIC_SPI 58 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  769) 			reg = <0xf011000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  770) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  771) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  772) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  773) 	qcom,msm-imem@c125000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  774) 		compatible = "qcom,msm-imem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  775) 		reg = <0xc125000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  776) 		ranges = <0x0 0xc125000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  777) 		#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  778) 		#size-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  779) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  780) 		mem_dump_table@10 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  781) 			compatible = "qcom,msm-imem-mem_dump_table";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  782) 			reg = <0x10 0x8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  783) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  784) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  785) 		restart_reason@65c {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  786) 			compatible = "qcom,msm-imem-restart_reason";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  787) 			reg = <0x65c 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  788) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  789) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  790) 		dload_type@1c {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  791) 			compatible = "qcom,msm-imem-dload-type";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  792) 			reg = <0x1c 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  793) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  794) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  795) 		boot_stats@6b0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  796) 			compatible = "qcom,msm-imem-boot_stats";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  797) 			reg = <0x6b0 0x20>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  798) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  799) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  800) 		kaslr_offset@6d0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  801) 			compatible = "qcom,msm-imem-kaslr_offset";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  802) 			reg = <0x6d0 0xc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  803) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  804) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  805) 		pil@94c {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  806) 			compatible = "qcom,msm-imem-pil";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  807) 			reg = <0x94c 0xc8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  808) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  809) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  810) 		diag_dload@c8 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  811) 			compatible = "qcom,msm-imem-diag-dload";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  812) 			reg = <0xc8 0xc8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  813) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  814) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  815) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  816) 	restart@440b000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  817) 		compatible = "qcom,pshold";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  818) 		reg = <0x440b000 0x4>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  819) 		      <0x03d3000 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  820) 		reg-names = "pshold-base", "tcsr-boot-misc-detect";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  821) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  822) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  823) 	qcom_seecom: qseecom@61800000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  824) 		compatible = "qcom,qseecom";
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  825) 		reg = <0x61800000 0x2100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  826) 		reg-names = "secapp-region";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  827) 		memory-region = <&qseecom_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  828) 		qcom,hlos-num-ce-hw-instances = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  829) 		qcom,hlos-ce-hw-instance = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  830) 		qcom,qsee-ce-hw-instance = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  831) 		qcom,disk-encrypt-pipe-pair = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  832) 		qcom,support-fde;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  833) 		qcom,fde-key-size;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  834) 		qcom,appsbl-qseecom-support;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  835) 		qcom,commonlib64-loaded-by-uefi;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  836) 		qcom,msm-bus,name = "qseecom-noc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  837) 		qcom,msm-bus,num-cases = <4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  838) 		qcom,msm-bus,num-paths = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  839) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  840) 			<MSM_BUS_MASTER_CRYPTO_CORE0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  841) 			MSM_BUS_SLAVE_FIRST 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  842) 			<MSM_BUS_MASTER_CRYPTO_CORE0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  843) 			MSM_BUS_SLAVE_FIRST 200000 400000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  844) 			<MSM_BUS_MASTER_CRYPTO_CORE0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  845) 			MSM_BUS_SLAVE_FIRST 300000 800000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  846) 			<MSM_BUS_MASTER_CRYPTO_CORE0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  847) 			MSM_BUS_SLAVE_FIRST 400000 1000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  848) 		clock-names =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  849) 			"core_clk_src", "core_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  850) 			"iface_clk", "bus_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  851) 		clocks =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  852) 			<&rpmcc QSEECOM_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  853) 			<&rpmcc QSEECOM_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  854) 			<&rpmcc QSEECOM_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  855) 			<&rpmcc QSEECOM_CE1_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  856) 		qcom,ce-opp-freq = <192000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  857) 		qcom,qsee-reentrancy-support = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  858) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  859) 
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  860) 	qcom_smcinvoke: smcinvoke@61800000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  861) 		compatible = "qcom,smcinvoke";
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  862) 		reg = <0x61800000 0x2100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  863) 		reg-names = "secapp-region";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  864) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  865) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  866) 	qcom_rng: qrng@1b53000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  867) 		compatible = "qcom,msm-rng";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  868) 		reg = <0x1b53000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  869) 		qcom,msm-rng-iface-clk;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  870) 		qcom,no-qrng-config;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  871) 		qcom,msm-bus,name = "msm-rng-noc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  872) 		qcom,msm-bus,num-cases = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  873) 		qcom,msm-bus,num-paths = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  874) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  875) 			<MSM_BUS_MASTER_AMPSS_M0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  876) 			MSM_BUS_SLAVE_PRNG 0 0>,    /* No vote */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  877) 			<MSM_BUS_MASTER_AMPSS_M0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  878) 			MSM_BUS_SLAVE_PRNG 0 300000>;  /* 75 MHz */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  879) 		clocks = <&gcc GCC_PRNG_AHB_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  880) 		clock-names = "iface_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  881) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  882) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  883) 	qcom_tzlog: tz-log@c125720 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  884) 		compatible = "qcom,tz-log";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  885) 		reg = <0xc125720 0x3000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  886) 		qcom,hyplog-enabled;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  887) 		hyplog-address-offset = <0x410>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  888) 		hyplog-size-offset = <0x414>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  889) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  890) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  891) 	qcom_cedev: qcedev@1b20000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  892) 		compatible = "qcom,qcedev";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  893) 		reg = <0x1b20000 0x20000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  894) 			<0x1b04000 0x24000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  895) 		reg-names = "crypto-base","crypto-bam-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  896) 		interrupts = <GIC_SPI 247 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  897) 		qcom,bam-pipe-pair = <3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  898) 		qcom,ce-hw-instance = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  899) 		qcom,ce-device = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  900) 		qcom,ce-hw-shared;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  901) 		qcom,bam-ee = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  902) 		qcom,msm-bus,name = "qcedev-noc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  903) 		qcom,msm-bus,num-cases = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  904) 		qcom,msm-bus,num-paths = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  905) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  906) 				<MSM_BUS_MASTER_CRYPTO_CORE0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  907) 				MSM_BUS_SLAVE_FIRST 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  908) 				<MSM_BUS_MASTER_CRYPTO_CORE0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  909) 				MSM_BUS_SLAVE_FIRST 393600 393600>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  910) 		clock-names =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  911) 			"core_clk_src", "core_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  912) 			"iface_clk", "bus_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  913) 		clocks =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  914) 			<&rpmcc QCEDEV_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  915) 			<&rpmcc QCEDEV_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  916) 			<&rpmcc QCEDEV_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  917) 			<&rpmcc QCEDEV_CE1_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  918) 		qcom,ce-opp-freq = <192000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  919) 		qcom,smmu-s1-enable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  920) 		iommus = <&apps_smmu 0x0086 0x0011>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  921) 			 <&apps_smmu 0x0096 0x0011>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  922) 		qcom,iommu-dma = "atomic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  923) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  924) 		qcom_cedev_ns_cb {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  925) 			compatible = "qcom,qcedev,context-bank";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  926) 			label = "ns_context";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  927) 			iommus = <&apps_smmu 0x92 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  928) 				<&apps_smmu 0x98 0x1>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  929) 				<&apps_smmu 0x9F 0>;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  930) 			qcom,iommu-dma-addr-pool = <0x70000000 0X10000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  931) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  932) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  933) 		qcom_cedev_s_cb {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  934) 			compatible = "qcom,qcedev,context-bank";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  935) 			label = "secure_context";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  936) 			iommus = <&apps_smmu 0x93 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  937) 				<&apps_smmu 0x9C 0x1>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  938) 				<&apps_smmu 0x9E 0>;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800  939) 			qcom,iommu-dma-addr-pool = <0x70000000 0X10000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  940) 			qcom,iommu-vmid = <0x9>; /* VMID_CP_BITSTREAM */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  941) 			qcom,secure-context-bank;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  942) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  943) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  944) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  945) 	qcom_crypto: qcrypto@1b20000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  946) 		compatible = "qcom,qcrypto";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  947) 		reg = <0x1b20000 0x20000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  948) 			<0x1b04000 0x24000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  949) 		reg-names = "crypto-base","crypto-bam-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  950) 		interrupts = <GIC_SPI 247 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  951) 		qcom,bam-pipe-pair = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  952) 		qcom,ce-hw-instance = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  953) 		qcom,ce-device = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  954) 		qcom,bam-ee = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  955) 		qcom,ce-hw-shared;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  956) 		qcom,clk-mgmt-sus-res;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  957) 		qcom,msm-bus,name = "qcrypto-noc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  958) 		qcom,msm-bus,num-cases = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  959) 		qcom,msm-bus,num-paths = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  960) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  961) 			<MSM_BUS_MASTER_CRYPTO_CORE0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  962) 			MSM_BUS_SLAVE_FIRST
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  963) 			0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  964) 			<MSM_BUS_MASTER_CRYPTO_CORE0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  965) 			MSM_BUS_SLAVE_FIRST
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  966) 			393600 393600>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  967) 		clock-names =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  968) 			"core_clk_src", "core_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  969) 			"iface_clk", "bus_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  970) 		clocks =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  971) 			<&rpmcc QCRYPTO_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  972) 			<&rpmcc QCRYPTO_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  973) 			<&rpmcc QCRYPTO_CE1_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  974) 			<&rpmcc QCRYPTO_CE1_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  975) 		qcom,use-sw-aes-cbc-ecb-ctr-algo;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  976) 		qcom,use-sw-aes-xts-algo;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  977) 		qcom,use-sw-aes-ccm-algo;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  978) 		qcom,use-sw-ahash-algo;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  979) 		qcom,use-sw-aead-algo;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  980) 		qcom,use-sw-hmac-algo;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  981) 		qcom,smmu-s1-enable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  982) 		iommus = <&apps_smmu 0x0084 0x0011>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  983) 			<&apps_smmu 0x0094 0x0011>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  984) 		qcom,iommu-dma = "atomic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  985) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  986) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  987) 	qcom,mpm2-sleep-counter@4403000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  988) 		compatible = "qcom,mpm2-sleep-counter";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  989) 		reg = <0x4403000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  990) 		clock-frequency = <32768>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  991) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  992) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  993) 	qcom,msm-rtb {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  994) 		compatible = "qcom,msm-rtb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  995) 		qcom,rtb-size = <0x100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  996) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  997) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  998) 	cpu_pmu: cpu-pmu {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800  999) 		compatible = "arm,armv8-pmuv3";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1000) 		qcom,irq-is-percpu;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1001) 		interrupts = <1 6 4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1002) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1003) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1004) 	eud: qcom,msm-eud@1610000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1005) 		compatible = "qcom,msm-eud";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1006) 		interrupt-names = "eud_irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1007) 		interrupts = <GIC_SPI 189 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1008) 		reg = <0x1610000 0x2000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1009) 		      <0x1612000 0x1000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1010) 		      <0x3E5018 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1011) 		reg-names = "eud_base", "eud_mode_mgr2",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1012) 				"eud_tcsr_check_reg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1013) 		qcom,secure-eud-en;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1014) 		qcom,eud-tcsr-check-enable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1015) 		qcom,eud-clock-vote-req;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1016) 		clocks = <&gcc GCC_AHB2PHY_USB_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1017) 		clock-names = "eud_ahb2phy_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1018) 		status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1019) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1020) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1021) 	qcom,msm-gladiator-v2@f100000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1022) 		compatible = "qcom,msm-gladiator-v2";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1023) 		reg = <0xf100000 0xdc00>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1024) 		reg-names = "gladiator_base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1025) 		interrupts = <GIC_SPI 22 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1026) 		clock-names = "atb_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1027) 		clocks = <&rpmcc RPM_QDSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1028) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1029) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1030) 	wdog: qcom,wdt@f017000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1031) 		compatible = "qcom,msm-watchdog";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1032) 		reg = <0xf017000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1033) 		reg-names = "wdt-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1034) 		interrupts = <GIC_SPI 3 IRQ_TYPE_EDGE_RISING>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1035) 			     <GIC_SPI 4 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1036) 		qcom,bark-time = <11000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1037) 		qcom,pet-time = <9360>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1038) 		qcom,ipi-ping;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1039) 		qcom,wakeup-enable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1040) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1041) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1042) 	rpm_bus: qcom,rpm-smd {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1043) 		compatible = "qcom,rpm-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1044) 		rpm-channel-name = "rpm_requests";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1045) 		interrupts = <GIC_SPI 194 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1046) 		rpm-channel-type = <15>; /* SMD_APPS_RPM */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1047) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1048) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1049) 	qcom,chd_silver {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1050) 		compatible = "qcom,core-hang-detect";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1051) 		label = "silver";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1052) 		qcom,threshold-arr = <0x0f1880b0 0x0f1980b0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1053) 				      0x0f1a80b0 0x0f1b80b0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1054) 		qcom,config-arr = <0x0f1880b8 0x0f1980b8
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1055) 				   0x0f1a80b8 0x0f1b80b8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1056) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1057) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1058) 	qcom,chd_gold {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1059) 		compatible = "qcom,core-hang-detect";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1060) 		label = "gold";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1061) 		qcom,threshold-arr = <0x0f0880b0 0x0f0980b0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1062) 				      0x0f0a80b0 0x0f0b80b0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1063) 		qcom,config-arr = <0x0f0880b8 0x0f0980b8
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1064) 				   0x0f0a80b8 0x0f0b80b8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1065) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1066) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1067) 	qcom,ghd {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1068) 		compatible = "qcom,gladiator-hang-detect";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1069) 		qcom,threshold-arr = <0x0f1d141c 0x0f1d1420
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1070) 				      0x0f1d1424 0x0f1d1428
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1071) 				      0x0f1d142c 0x0f1d1430>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1072) 		qcom,config-reg = <0x0f1d1434>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1073) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1074) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1075) 	qcom,lpass@ab00000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1076) 		compatible = "qcom,pil-tz-generic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1077) 		reg = <0xab00000 0x00100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1078) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1079) 		vdd_lpi_cx-supply = <&L3A_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1080) 		qcom,proxy-reg-names = "vdd_lpi_cx", "vdd_lpi_mx";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1081) 		qcom,vdd_lpi_cx-uV-uA = <RPMH_REGULATOR_LEVEL_TURBO 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1082) 		vdd_lpi_mx-supply = <&L2A_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1083) 		qcom,vdd_lpi_mx-uV-uA = <RPMH_REGULATOR_LEVEL_TURBO 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1084) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1085) 		clocks = <&rpmcc CXO_SMD_PIL_LPASS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1086) 		clock-names = "xo";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1087) 		qcom,proxy-clock-names = "xo";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1088) 		qcom,mas-crypto = <&mas_crypto_c0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1089) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1090) 		qcom,pas-id = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1091) 		qcom,proxy-timeout-ms = <10000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1092) 		qcom,smem-id = <423>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1093) 		qcom,minidump-id = <5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1094) 		qcom,sysmon-id = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1095) 		qcom,ssctl-instance-id = <0x14>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1096) 		qcom,firmware-name = "adsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1097) 		memory-region = <&pil_adsp_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1098) 		qcom,complete-ramdump;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1099) 		qcom,minidump-as-elf32;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1100) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1101) 		/* Inputs from lpass */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1102) 		interrupts-extended = <&intc 0 282 1>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1103) 				      <&adsp_smp2p_in 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1104) 				      <&adsp_smp2p_in 2 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1105) 				      <&adsp_smp2p_in 1 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1106) 				      <&adsp_smp2p_in 3 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1107) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1108) 		interrupt-names = "qcom,wdog",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1109) 				  "qcom,err-fatal",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1110) 				  "qcom,proxy-unvote",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1111) 				  "qcom,err-ready",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1112) 				  "qcom,stop-ack";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1113) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1114) 		/* Outputs to lpass */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1115) 		qcom,smem-states = <&adsp_smp2p_out 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1116) 		qcom,smem-state-names = "qcom,force-stop";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1117) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1118) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1119) 	qcom,turing@b300000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1120) 		compatible = "qcom,pil-tz-generic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1121) 		reg = <0xb300000 0x100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1122) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1123) 		vdd_cx-supply = <&VDD_CX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1124) 		qcom,proxy-reg-names = "vdd_cx";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1125) 		qcom,vdd_cx-uV-uA = <RPMH_REGULATOR_LEVEL_TURBO 100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1126) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1127) 		clocks = <&rpmcc CXO_SMD_PIL_CDSP_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1128) 		clock-names = "xo";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1129) 		qcom,proxy-clock-names = "xo";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1130) 		qcom,mas-crypto = <&mas_crypto_c0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1131) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1132) 		qcom,pas-id = <18>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1133) 		qcom,proxy-timeout-ms = <10000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1134) 		qcom,smem-id = <601>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1135) 		qcom,minidump-id = <7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1136) 		qcom,sysmon-id = <7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1137) 		qcom,ssctl-instance-id = <0x17>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1138) 		qcom,firmware-name = "cdsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1139) 		memory-region = <&pil_cdsp_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1140) 		qcom,complete-ramdump;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1141) 		qcom,minidump-as-elf32;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1142) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1143) 		/* Inputs from turing */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1144) 		interrupts-extended = <&intc 0 265 1>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1145) 				      <&cdsp_smp2p_in 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1146) 				      <&cdsp_smp2p_in 2 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1147) 				      <&cdsp_smp2p_in 1 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1148) 				      <&cdsp_smp2p_in 3 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1149) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1150) 		interrupt-names = "qcom,wdog",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1151) 				  "qcom,err-fatal",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1152) 				  "qcom,proxy-unvote",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1153) 				  "qcom,err-ready",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1154) 				  "qcom,stop-ack";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1155) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1156) 		/* Outputs to turing */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1157) 		qcom,smem-states = <&cdsp_smp2p_out 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1158) 		qcom,smem-state-names = "qcom,force-stop";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1159) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1160) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1161) 	mem_dump {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1162) 		compatible = "qcom,mem-dump";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1163) 		memory-region = <&dump_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1164) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1165) 		c0_context {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1166) 			qcom,dump-size = <0x800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1167) 			qcom,dump-id = <0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1168) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1169) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1170) 		c1_context {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1171) 			qcom,dump-size = <0x800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1172) 			qcom,dump-id = <0x1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1173) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1174) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1175) 		c2_context {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1176) 			qcom,dump-size = <0x800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1177) 			qcom,dump-id = <0x2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1178) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1179) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1180) 		c3_context {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1181) 			qcom,dump-size = <0x800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1182) 			qcom,dump-id = <0x3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1183) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1184) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1185) 		c100_context {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1186) 			qcom,dump-size = <0x800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1187) 			qcom,dump-id = <0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1188) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1189) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1190) 		c101_context {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1191) 			qcom,dump-size = <0x800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1192) 			qcom,dump-id = <0x5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1193) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1194) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1195) 		c102_context {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1196) 			qcom,dump-size = <0x800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1197) 			qcom,dump-id = <0x6>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1198) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1199) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1200) 		c103_context {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1201) 			qcom,dump-size = <0x800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1202) 			qcom,dump-id = <0x7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1203) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1204) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1205) 		c_scandump {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1206) 			qcom,dump-size = <0x40000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1207) 			qcom,dump-id = <0xeb>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1208) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1209) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1210) 		l1_icache0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1211) 			qcom,dump-size = <0x9040>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1212) 			qcom,dump-id = <0x60>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1213) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1214) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1215) 		l1_icache1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1216) 			qcom,dump-size = <0x9040>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1217) 			qcom,dump-id = <0x61>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1218) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1219) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1220) 		l1_icache2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1221) 			qcom,dump-size = <0x9040>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1222) 			qcom,dump-id = <0x62>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1223) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1224) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1225) 		l1_icache3 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1226) 			qcom,dump-size = <0x9040>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1227) 			qcom,dump-id = <0x63>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1228) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1229) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1230) 		l1_icache100 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1231) 			qcom,dump-size = <0x12000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1232) 			qcom,dump-id = <0x64>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1233) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1234) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1235) 		l1_icache101 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1236) 			qcom,dump-size = <0x12000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1237) 			qcom,dump-id = <0x65>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1238) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1239) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1240) 		l1_icache102 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1241) 			qcom,dump-size = <0x12000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1242) 			qcom,dump-id = <0x66>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1243) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1244) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1245) 		l1_icache103 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1246) 			qcom,dump-size = <0x12000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1247) 			qcom,dump-id = <0x67>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1248) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1249) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1250) 		l1_dcache0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1251) 			qcom,dump-size = <0x9040>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1252) 			qcom,dump-id = <0x80>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1253) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1254) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1255) 		l1_dcache1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1256) 			qcom,dump-size = <0x9040>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1257) 			qcom,dump-id = <0x81>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1258) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1259) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1260) 		l1_dcache2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1261) 			qcom,dump-size = <0x9040>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1262) 			qcom,dump-id = <0x82>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1263) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1264) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1265) 		l1_dcache3 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1266) 			qcom,dump-size = <0x9040>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1267) 			qcom,dump-id = <0x83>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1268) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1269) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1270) 		l1_dcache100 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1271) 			qcom,dump-size = <0x12000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1272) 			qcom,dump-id = <0x84>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1273) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1274) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1275) 		l1_dcache101 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1276) 			qcom,dump-size = <0x12000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1277) 			qcom,dump-id = <0x85>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1278) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1279) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1280) 		l1_dcache102 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1281) 			qcom,dump-size = <0x12000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1282) 			qcom,dump-id = <0x86>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1283) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1284) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1285) 		l1_dcache103 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1286) 			qcom,dump-size = <0x12000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1287) 			qcom,dump-id = <0x87>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1288) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1289) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1290) 		l2_tlb0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1291) 			qcom,dump-size = <0x2000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1292) 			qcom,dump-id = <0x120>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1293) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1294) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1295) 		l2_tlb1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1296) 			qcom,dump-size = <0x2000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1297) 			qcom,dump-id = <0x121>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1298) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1299) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1300) 		l2_tlb2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1301) 			qcom,dump-size = <0x2000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1302) 			qcom,dump-id = <0x122>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1303) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1304) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1305) 		l2_tlb3 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1306) 			qcom,dump-size = <0x2000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1307) 			qcom,dump-id = <0x123>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1308) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1309) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1310) 		l2_tlb100 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1311) 			qcom,dump-size = <0x4800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1312) 			qcom,dump-id = <0x124>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1313) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1314) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1315) 		l2_tlb101 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1316) 			qcom,dump-size = <0x4800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1317) 			qcom,dump-id = <0x125>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1318) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1319) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1320) 		l2_tlb102 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1321) 			qcom,dump-size = <0x4800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1322) 			qcom,dump-id = <0x126>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1323) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1324) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1325) 		l2_tlb103 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1326) 			qcom,dump-size = <0x4800>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1327) 			qcom,dump-id = <0x127>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1328) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1329) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1330) 		rpm_sw {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1331) 			qcom,dump-size = <0x28000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1332) 			qcom,dump-id = <0xea>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1333) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1334) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1335) 		pmic {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1336) 			qcom,dump-size = <0x10000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1337) 			qcom,dump-id = <0xe4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1338) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1339) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1340) 		fcm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1341) 			qcom,dump-size = <0x8400>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1342) 			qcom,dump-id = <0xee>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1343) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1344) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1345) 		tmc_etf {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1346) 			qcom,dump-size = <0x8000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1347) 			qcom,dump-id = <0xf0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1348) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1349) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1350) 		etr_reg {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1351) 			qcom,dump-size = <0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1352) 			qcom,dump-id = <0x100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1353) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1354) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1355) 		etf_reg {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1356) 			qcom,dump-size = <0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1357) 			qcom,dump-id = <0x101>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1358) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1359) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1360) 		misc_data {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1361) 			qcom,dump-size = <0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1362) 			qcom,dump-id = <0xe8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1363) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1364) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1365) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1366) 	sdcc1_ice: sdcc1ice@4748000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1367) 		compatible = "qcom,ice";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1368) 		reg = <0x4748000 0x8000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1369) 		qcom,enable-ice-clk;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1370) 		clock-names = "ice_core_clk_src", "ice_core_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1371) 				"bus_clk", "iface_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1372) 		clocks = <&gcc GCC_SDCC1_ICE_CORE_CLK_SRC>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1373) 			<&gcc GCC_SDCC1_ICE_CORE_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1374) 			<&gcc GCC_SDCC1_AHB_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1375) 			<&gcc GCC_SDCC1_APPS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1376) 		qcom,op-freq-hz = <300000000>, <0>, <0>, <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1377) 		qcom,msm-bus,name = "sdcc_ice_noc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1378) 		qcom,msm-bus,num-cases = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1379) 		qcom,msm-bus,num-paths = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1380) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1381) 				<MSM_BUS_MASTER_AMPSS_M0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1382) 				MSM_BUS_SLAVE_SDCC_1 0 0>,    /* No vote */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1383) 				<MSM_BUS_MASTER_AMPSS_M0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1384) 				MSM_BUS_SLAVE_SDCC_1 1000 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1385) 				/* Max. bandwidth */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1386) 		qcom,bus-vector-names = "MIN",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1387) 					"MAX";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1388) 		qcom,instance-type = "sdcc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1389) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1390) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1391) 	sdhc_1: sdhci@4744000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1392) 		compatible = "qcom,sdhci-msm-v5", "qcom,sdhci-msm-cqe";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1393) 		reg = <0x4744000 0x1000>, <0x4745000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1394) 		reg-names = "hc_mem", "cqhci_mem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1395) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1396) 		interrupts-extended = <&intc GIC_SPI 348 IRQ_TYPE_LEVEL_HIGH>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1397) 				<&intc GIC_SPI 352 IRQ_TYPE_LEVEL_HIGH>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1398) 				<&tlmm 19 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1399) 		interrupt-names = "hc_irq", "pwr_irq", "tb_trig_irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1400) 		sdhc-msm-crypto = <&sdcc1_ice>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1401) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1402) 		qcom,bus-width = <8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1403) 		qcom,large-address-bus;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1404) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1405) 		qcom,clk-rates = <400000 20000000 25000000 50000000 100000000
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1406) 						192000000 384000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1407) 		qcom,bus-speed-mode = "HS400_1p8v", "HS200_1p8v", "DDR_1p8v";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1408) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1409) 		qcom,devfreq,freq-table = <50000000 200000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1410) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1411) 		qcom,scaling-lower-bus-speed-mode = "DDR52";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1412) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1413) 		qcom,msm-bus,name = "sdhc1";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1414) 		qcom,msm-bus,num-cases = <9>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1415) 		qcom,msm-bus,num-paths = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1416) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1417) 			/* No vote */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1418) 			<78 512 0 0>, <1 606 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1419) 			/* 400 KB/s*/
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1420) 			<78 512 1046 1600>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1421) 			<1 606 1600 1600>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1422) 			/* 20 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1423) 			<78 512 20480 80000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1424) 			<1 606 80000 80000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1425) 			/* 25 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1426) 			<78 512 25600 250000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1427) 			<1 606 50000 133320>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1428) 			/* 50 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1429) 			<78 512 51200 250000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1430) 			<1 606 65000 133320>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1431) 			/* 100 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1432) 			<78 512 102400 250000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1433) 			<1 606 65000 133320>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1434) 			/* 200 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1435) 			<78 512 204800 800000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1436) 			<1 606 200000 300000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1437) 			/* 400 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1438) 			<78 512 204800 800000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1439) 			<1 606 200000 300000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1440) 			/* Max. bandwidth */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1441) 			<78 512 1338562 4096000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1442) 			<1 606 1338562 4096000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1443) 		qcom,bus-bw-vectors-bps = <0 400000 20000000 25000000 50000000
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1444) 			100750000 200000000 400000000 4294967295>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1445) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1446) 		/* PM QoS */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1447) 		qcom,pm-qos-irq-type = "affine_irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1448) 		qcom,pm-qos-irq-latency = <26 26>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1449) 		qcom,pm-qos-cpu-groups = <0x0f 0xf0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1450) 		qcom,pm-qos-cmdq-latency-us = <26 26>, <26 26>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1451) 		qcom,pm-qos-legacy-latency-us = <26 26>, <26 26>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1452) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1453) 		clocks = <&gcc GCC_SDCC1_AHB_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1454) 			<&gcc GCC_SDCC1_APPS_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1455) 			<&gcc GCC_SDCC1_ICE_CORE_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1456) 		clock-names = "iface_clk", "core_clk", "ice_core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1457) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1458) 		qcom,ice-clk-rates = <300000000 100000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1459) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1460) 		/* Add support for gcc hw reset */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1461) 		resets = <&gcc GCC_SDCC1_BCR>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1462) 		reset-names = "core_reset";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1463) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1464) 		/* DLL HSR settings. Refer go/hsr - <Target> DLL settings */
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800 1465) 		qcom,dll-hsr-list = <0x000f642c 0x0 0x0 0x00010800 0x80040860>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1466) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1467) 		qcom,nonremovable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1468) 		status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1469) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1470) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1471) 	sdhc_2: sdhci@4784000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1472) 		compatible = "qcom,sdhci-msm-v5";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1473) 		reg = <0x4784000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1474) 		reg-names = "hc_mem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1475) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1476) 		interrupts = <GIC_SPI 350 IRQ_TYPE_LEVEL_HIGH>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1477) 				<GIC_SPI 353 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1478) 		interrupt-names = "hc_irq", "pwr_irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1479) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1480) 		qcom,bus-width = <4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1481) 		qcom,large-address-bus;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1482) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1483) 		qcom,clk-rates = <400000 20000000 25000000
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1484) 				50000000 100000000 202000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1485) 		qcom,bus-speed-mode = "SDR12", "SDR25", "SDR50", "DDR50",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1486) 				      "SDR104";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1487) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1488) 		qcom,devfreq,freq-table = <50000000 202000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1489) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1490) 		qcom,msm-bus,name = "sdhc2";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1491) 		qcom,msm-bus,num-cases = <8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1492) 		qcom,msm-bus,num-paths = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1493) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1494) 			/* No vote */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1495) 			<81 512 0 0>, <1 608 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1496) 			/* 400 KB/s*/
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1497) 			<81 512 1046 3200>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1498) 			<1 608 1600 1600>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1499) 			/* 20 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1500) 			<81 512 52286 250000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1501) 			<1 608 80000 133320>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1502) 			/* 25 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1503) 			<81 512 65360 250000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1504) 			<1 608 100000 133320>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1505) 			/* 50 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1506) 			<81 512 130718 250000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1507) 			<1 608 133320 133320>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1508) 			/* 100 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1509) 			<81 512 261438 250000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1510) 			<1 608 150000 133320>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1511) 			/* 200 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1512) 			<81 512 261438 800000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1513) 			<1 608 300000 300000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1514) 			/* Max. bandwidth */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1515) 			<81 512 1338562 4096000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1516) 			<1 608 1338562 4096000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1517) 		qcom,bus-bw-vectors-bps = <0 400000 20000000 25000000 50000000
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1518) 			100750000 200000000 4294967295>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1519) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1520) 		/* PM QoS */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1521) 		qcom,pm-qos-irq-type = "affine_irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1522) 		qcom,pm-qos-irq-latency = <26 26>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1523) 		qcom,pm-qos-cpu-groups = <0x0f 0xf0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1524) 		qcom,pm-qos-legacy-latency-us = <26 26>, <26 26>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1525) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1526) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1527) 		clocks = <&gcc GCC_SDCC2_AHB_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1528) 			<&gcc GCC_SDCC2_APPS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1529) 		clock-names = "iface_clk", "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1530) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1531) 		/* DLL HSR settings. Refer go/hsr - <Target> DLL settings */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1532) 		qcom,dll-hsr-list = <0x0007642c 0x0 0x0 0x00010800 0x80040868>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1533) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1534) 		status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1535) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1536) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1537) 	ufs_ice: ufsice@4810000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1538) 		compatible = "qcom,ice";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1539) 		reg = <0x4810000 0x8000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1540) 		qcom,enable-ice-clk;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1541) 		clock-names = "ufs_core_clk", "bus_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1542) 				"iface_clk", "ice_core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1543) 		clocks = <&gcc GCC_UFS_PHY_AXI_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1544) 			<&gcc GCC_UFS_CLKREF_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1545) 			<&gcc GCC_UFS_PHY_AHB_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1546) 			<&gcc GCC_UFS_PHY_ICE_CORE_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1547) 		qcom,op-freq-hz = <0>, <0>, <0>, <300000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1548) 		vdd-hba-supply = <&gcc_ufs_phy_gdsc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1549) 		qcom,msm-bus,name = "ufs_ice_noc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1550) 		qcom,msm-bus,num-cases = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1551) 		qcom,msm-bus,num-paths = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1552) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1553) 				<MSM_BUS_MASTER_AMPSS_M0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1554) 				 MSM_BUS_SLAVE_UFS_MEM_CFG 0 0>, /*No vote*/
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1555) 				<MSM_BUS_MASTER_AMPSS_M0
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1556) 				 MSM_BUS_SLAVE_UFS_MEM_CFG 1000 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1557) 				 /* Max. bandwidth */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1558) 		qcom,bus-vector-names = "MIN",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1559) 					"MAX";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1560) 		qcom,instance-type = "ufs";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1561) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1562) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1563) 	ufsphy_mem: ufsphy_mem@4807000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1564) 		reg = <0x4807000 0xdb8>; /* PHY regs */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1565) 		reg-names = "phy_mem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1566) 		#phy-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1567) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1568) 		lanes-per-direction = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1569) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1570) 		clock-names = "ref_clk_src",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1571) 			"ref_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1572) 			"ref_aux_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1573) 		clocks = <&rpmcc RPM_SMD_XO_CLK_SRC>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1574) 			<&gcc GCC_UFS_CLKREF_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1575) 			<&gcc GCC_UFS_PHY_PHY_AUX_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1576) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1577) 		status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1578) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1579) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1580) 	ufshc_mem: ufshc@4804000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1581) 		compatible = "qcom,ufshc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1582) 		reg = <0x4804000 0x3000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1583) 		interrupts = <GIC_SPI 356 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1584) 		phys = <&ufsphy_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1585) 		phy-names = "ufsphy";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1586) 		ufs-qcom-crypto = <&ufs_ice>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1587) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1588) 		lanes-per-direction = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1589) 		dev-ref-clk-freq = <0>; /* 19.2 MHz */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1590) 		spm-level = <5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1591) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1592) 		clock-names =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1593) 			"core_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1594) 			"bus_aggr_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1595) 			"iface_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1596) 			"core_clk_unipro",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1597) 			"core_clk_ice",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1598) 			"ref_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1599) 			"tx_lane0_sync_clk",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1600) 			"rx_lane0_sync_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1601) 		clocks =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1602) 			<&gcc GCC_UFS_PHY_AXI_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1603) 			<&gcc GCC_SYS_NOC_UFS_PHY_AXI_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1604) 			<&gcc GCC_UFS_PHY_AHB_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1605) 			<&gcc GCC_UFS_PHY_UNIPRO_CORE_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1606) 			<&gcc GCC_UFS_PHY_ICE_CORE_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1607) 			<&rpmcc RPM_SMD_XO_CLK_SRC>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1608) 			<&gcc GCC_UFS_PHY_TX_SYMBOL_0_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1609) 			<&gcc GCC_UFS_PHY_RX_SYMBOL_0_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1610) 		freq-table-hz =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1611) 			<50000000 200000000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1612) 			<0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1613) 			<0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1614) 			<37500000 150000000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1615) 			<75000000 300000000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1616) 			<0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1617) 			<0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1618) 			<0 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1619) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1620) 		qcom,msm-bus,name = "ufshc_mem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1621) 		qcom,msm-bus,num-cases = <12>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1622) 		qcom,msm-bus,num-paths = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1623) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1624) 		/*
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1625) 		 * During HS G3 UFS runs at nominal voltage corner, vote
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1626) 		 * higher bandwidth to push other buses in the data path
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1627) 		 * to run at nominal to achieve max throughput.
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1628) 		 * 4GBps pushes BIMC to run at nominal.
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1629) 		 * 200MBps pushes CNOC to run at nominal.
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1630) 		 * Vote for half of this bandwidth for HS G3 1-lane.
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1631) 		 * For max bandwidth, vote high enough to push the buses
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1632) 		 * to run in turbo voltage corner.
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1633) 		 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1634) 		<123 512 0 0>, <1 757 0 0>,          /* No vote */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1635) 		<123 512 922 0>, <1 757 1000 0>,     /* PWM G1 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1636) 		<123 512 1844 0>, <1 757 1000 0>,    /* PWM G2 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1637) 		<123 512 3688 0>, <1 757 1000 0>,    /* PWM G3 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1638) 		<123 512 7376 0>, <1 757 1000 0>,    /* PWM G4 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1639) 		<123 512 127796 0>, <1 757 1000 0>,  /* HS G1 RA */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1640) 		<123 512 255591 0>, <1 757 1000 0>,  /* HS G2 RA */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1641) 		<123 512 2097152 0>, <1 757 102400 0>,  /* HS G3 RA */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1642) 		<123 512 149422 0>, <1 757 1000 0>,  /* HS G1 RB */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1643) 		<123 512 298189 0>, <1 757 1000 0>,  /* HS G2 RB */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1644) 		<123 512 2097152 0>, <1 757 102400 0>,  /* HS G3 RB */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1645) 		<123 512 7643136 0>, <1 757 307200 0>; /* Max. bandwidth */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1646) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1647) 		qcom,bus-vector-names = "MIN",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1648) 		"PWM_G1_L1", "PWM_G2_L1", "PWM_G3_L1", "PWM_G4_L1",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1649) 		"HS_RA_G1_L1", "HS_RA_G2_L1", "HS_RA_G3_L1",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1650) 		"HS_RB_G1_L1", "HS_RB_G2_L1", "HS_RB_G3_L1",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1651) 		"MAX";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1652) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1653) 		/* PM QoS */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1654) 		qcom,pm-qos-cpu-groups = <0x0f 0xf0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1655) 		qcom,pm-qos-cpu-group-latency-us = <26 26>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1656) 		qcom,pm-qos-default-cpu = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1657) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1658) 		pinctrl-names = "dev-reset-assert", "dev-reset-deassert";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1659) 		pinctrl-0 = <&ufs_dev_reset_assert>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1660) 		pinctrl-1 = <&ufs_dev_reset_deassert>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1661) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1662) 		resets = <&gcc GCC_UFS_PHY_BCR>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1663) 		reset-names = "core_reset";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1664) 		non-removable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1665) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1666) 		status = "disabled";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1667) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1668) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1669) 	thermal_zones: thermal-zones {};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1670) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1671) 	tsens0:tsens@c222000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1672) 		compatible = "qcom,tsens24xx";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1673) 		reg = <0x04410000  0x8>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1674) 		      <0x04411000  0x1ff>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1675) 		reg-names = "tsens_srot_physical",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1676) 			     "tsens_tm_physical";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1677) 		interrupts = <0 275 0>, <0 190 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1678) 		interrupt-names = "tsens-upper-lower", "tsens-critical";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1679) 		tsens-reinit-wa;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1680) 		#thermal-sensor-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1681) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1682) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1683) 	clocks {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1684) 		xo_board: xo_board {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1685) 			compatible = "fixed-clock";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1686) 			clock-frequency = <19200000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1687) 			clock-output-names = "xo_board";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1688) 			#clock-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1689) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1690) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1691) 		sleep_clk: sleep_clk {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1692) 			compatible = "fixed-clock";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1693) 			clock-frequency = <32764>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1694) 			clock-output-names = "sleep_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1695) 			#clock-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1696) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1697) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1698) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1699) 	rpmcc: qcom,rpmcc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1700) 		compatible = "qcom,rpmcc-bengal";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1701) 		#clock-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1702) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1703) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1704) 	qcom,rmtfs_sharedmem@0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1705) 		compatible = "qcom,sharedmem-uio";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1706) 		reg = <0x0 0x200000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1707) 		reg-names = "rmtfs";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1708) 		qcom,client-id = <0x00000001>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1709) 		qcom,guard-memory;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1710) 		qcom,vm-nav-path;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1711) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1712) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1713) 	gcc: qcom,gcc@1400000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1714) 		compatible = "qcom,bengal-gcc", "syscon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1715) 		reg = <0x1400000 0x1f0000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1716) 		reg-names = "cc_base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1717) 		vdd_cx-supply = <&VDD_CX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1718) 		vdd_cx_ao-supply = <&VDD_CX_LEVEL_AO>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1719) 		vdd_mx-supply = <&VDD_MX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1720) 		#clock-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1721) 		#reset-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1722) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1723) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1724) 	dispcc: qcom,dispcc@5f00000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1725) 		compatible = "qcom,bengal-dispcc", "syscon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1726) 		reg = <0x05f00000 0x20000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1727) 		reg-names = "cc_base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1728) 		clock-names = "cfg_ahb_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1729) 		clocks = <&gcc GCC_DISP_AHB_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1730) 		vdd_cx-supply = <&VDD_CX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1731) 		#clock-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1732) 		#reset-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1733) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1734) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1735) 	gpucc: qcom,gpucc@5990000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1736) 		compatible = "qcom,bengal-gpucc", "syscon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1737) 		reg = <0x5990000 0x9000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1738) 		reg-names = "cc_base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1739) 		vdd_cx-supply = <&VDD_CX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1740) 		vdd_mx-supply = <&VDD_MX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1741) 		qcom,gpu_cc_gx_gfx3d_clk_src-opp-handle = <&msm_gpu>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1742) 		#clock-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1743) 		#reset-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1744) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1745) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1746) 	mccc_debug: syscon@447d200 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1747) 		compatible = "syscon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1748) 		reg = <0x447d200 0x100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1749) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1750) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1751) 	cpucc_debug: syscon@f11101c {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1752) 		compatible = "syscon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1753) 		reg = <0xf11101c 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1754) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1755) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1756) 	debugcc: qcom,cc-debug {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1757) 		compatible = "qcom,bengal-debugcc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1758) 		qcom,gcc = <&gcc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1759) 		qcom,dispcc = <&dispcc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1760) 		qcom,gpucc = <&gpucc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1761) 		qcom,mccc = <&mccc_debug>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1762) 		qcom,cpucc = <&cpucc_debug>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1763) 		clock-names = "xo_clk_src";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1764) 		clocks = <&rpmcc RPM_SMD_XO_CLK_SRC>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1765) 		#clock-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1766) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1767) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1768) 	cpufreq_hw: qcom,cpufreq-hw {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1769) 		compatible = "qcom,cpufreq-hw";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1770) 		reg = <0xf521000 0x1000>, <0xf523000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1771) 		reg-names = "freq-domain0", "freq-domain1";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1772) 		clocks = <&rpmcc RPM_SMD_XO_CLK_SRC>, <&gcc GPLL0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1773) 		clock-names = "xo", "alternate";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1774) 		qcom,no-accumulative-counter;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1775) 		qcom,max-lut-entries = <12>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1776) 		#freq-domain-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1777) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1778) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1779) 	tcsr_mutex_block: syscon@00340000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1780) 		compatible = "syscon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1781) 		reg = <0x340000 0x20000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1782) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1783) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1784) 	tcsr_mutex: hwlock {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1785) 		compatible = "qcom,tcsr-mutex";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1786) 		syscon = <&tcsr_mutex_block 0 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1787) 		#hwlock-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1788) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1789) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1790) 	smem: qcom,smem {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1791) 		compatible = "qcom,smem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1792) 		memory-region = <&smem_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1793) 		hwlocks = <&tcsr_mutex 3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1794) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1795) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1796) 	rpm_msg_ram: memory@045f0000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1797) 			compatible = "qcom,rpm-msg-ram";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1798) 			reg = <0x45f0000 0x7000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1799) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1800) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1801) 	apcs_glb: mailbox@0f111000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1802) 		compatible = "qcom,bengal-apcs-hmss-global";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1803) 		reg = <0xF111000 0x1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1804) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1805) 		#mbox-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1806) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1807) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1808) 	qcom,msm-cdsp-loader {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1809) 		compatible = "qcom,cdsp-loader";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1810) 		qcom,proc-img-to-load = "cdsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1811) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1812) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1813) 	qcom,msm-adsprpc-mem {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1814) 		compatible = "qcom,msm-adsprpc-mem-region";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1815) 		memory-region = <&adsp_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1816) 		restrict-access;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1817) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1818) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1819) 	qcom,msm_fastrpc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1820) 		compatible = "qcom,msm-fastrpc-compute";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1821) 		qcom,rpc-latency-us = <611>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1822) 		qcom,adsp-remoteheap-vmid = <22 37>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1823) 		qcom,fastrpc-adsp-audio-pdr;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1824) 		qcom,fastrpc-adsp-sensors-pdr;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1825) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1826) 		qcom,msm_fastrpc_compute_cb1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1827) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1828) 			label = "cdsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1829) 			iommus = <&apps_smmu 0x0C01 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1830) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1831) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1832) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1833) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1834) 		qcom,msm_fastrpc_compute_cb2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1835) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1836) 			label = "cdsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1837) 			iommus = <&apps_smmu 0x0C02 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1838) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1839) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1840) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1841) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1842) 		qcom,msm_fastrpc_compute_cb3 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1843) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1844) 			label = "cdsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1845) 			iommus = <&apps_smmu 0x0C03 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1846) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1847) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1848) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1849) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1850) 		qcom,msm_fastrpc_compute_cb4 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1851) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1852) 			label = "cdsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1853) 			iommus = <&apps_smmu 0x0C04 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1854) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1855) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1856) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1857) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1858) 		qcom,msm_fastrpc_compute_cb5 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1859) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1860) 			label = "cdsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1861) 			iommus = <&apps_smmu 0x0C05 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1862) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1863) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1864) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1865) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1866) 		qcom,msm_fastrpc_compute_cb6 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1867) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1868) 			label = "cdsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1869) 			iommus = <&apps_smmu 0x0C06 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1870) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1871) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1872) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1873) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1874) 		qcom,msm_fastrpc_compute_cb9 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1875) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1876) 			label = "cdsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1877) 			qcom,secure-context-bank;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1878) 			iommus = <&apps_smmu 0x0C09 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1879) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1880) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1881) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1882) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1883) 		qcom,msm_fastrpc_compute_cb10 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1884) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1885) 			label = "adsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1886) 			iommus = <&apps_smmu 0x01C3 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1887) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1888) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1889) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1890) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1891) 		qcom,msm_fastrpc_compute_cb11 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1892) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1893) 			label = "adsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1894) 			iommus = <&apps_smmu 0x01C4 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1895) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1896) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1897) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1898) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1899) 		qcom,msm_fastrpc_compute_cb12 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1900) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1901) 			label = "adsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1902) 			iommus = <&apps_smmu 0x01C5 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1903) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1904) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1905) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1906) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1907) 		qcom,msm_fastrpc_compute_cb13 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1908) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1909) 			label = "adsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1910) 			iommus = <&apps_smmu 0x01C6 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1911) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1912) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1913) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1914) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1915) 		qcom,msm_fastrpc_compute_cb14 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1916) 			compatible = "qcom,msm-fastrpc-compute-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1917) 			label = "adsprpc-smd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1918) 			iommus = <&apps_smmu 0x01C7 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1919) 			qcom,iommu-dma-addr-pool = <0x80000000 0x78000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1920) 			qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1921) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1922) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1923) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1924) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1925) 	rpm-glink {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1926) 		compatible = "qcom,glink-rpm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1927) 		interrupts = <GIC_SPI 194 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1928) 		qcom,rpm-msg-ram = <&rpm_msg_ram>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1929) 		mboxes = <&apcs_glb 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1930) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1931) 		qcom,rpm_glink_ssr {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1932) 			qcom,glink-channels = "glink_ssr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1933) 			qcom,notify-edges = <&glink_modem>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1934) 					    <&glink_adsp>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1935) 					    <&glink_cdsp>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1936) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1937) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1938) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1939) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1940) 	qcom,glink {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1941) 		compatible = "qcom,glink";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1942) 		#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1943) 		#size-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1944) 		ranges;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1945) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1946) 		glink_modem: modem {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1947) 			qcom,remote-pid = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1948) 			transport = "smem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1949) 			mboxes = <&apcs_glb 12>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1950) 			mbox-names = "mpss_smem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1951) 			interrupts = <GIC_SPI 68 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1952) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1953) 			label = "modem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1954) 			qcom,glink-label = "mpss";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1955) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1956) 			qcom,modem_qrtr {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1957) 				qcom,glink-channels = "IPCRTR";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1958) 				qcom,low-latency;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1959) 				qcom,intents = <0x800  5
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1960) 						0x2000 3
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1961) 						0x4400 2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1962) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1963) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1964) 			qcom,msm_fastrpc_rpmsg {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1965) 				compatible = "qcom,msm-fastrpc-rpmsg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1966) 				qcom,glink-channels = "fastrpcglink-apps-dsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1967) 				qcom,intents = <0x64 64>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1968) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1969) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1970) 			qcom,modem_ds {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1971) 				qcom,glink-channels = "DS";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1972) 				qcom,intents = <0x4000 2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1973) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1974) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1975) 			qcom,modem_glink_ssr {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1976) 				qcom,glink-channels = "glink_ssr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1977) 				qcom,notify-edges = <&glink_adsp>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1978) 						    <&glink_cdsp>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1979) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1980) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1981) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1982) 		glink_adsp: adsp {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1983) 			qcom,remote-pid = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1984) 			transport = "smem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1985) 			mboxes = <&apcs_glb 8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1986) 			mbox-names = "adsp_smem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1987) 			interrupts = <GIC_SPI 277 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1988) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1989) 			label = "adsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1990) 			qcom,glink-label = "lpass";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1991) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1992) 			qcom,adsp_qrtr {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1993) 				qcom,glink-channels = "IPCRTR";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1994) 				qcom,low-latency;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1995) 				qcom,intents = <0x800  5
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1996) 						0x2000 3
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1997) 						0x4400 2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1998) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 1999) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2000) 			qcom,apr_tal_rpmsg {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2001) 				qcom,glink-channels = "apr_audio_svc";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2002) 				qcom,intents = <0x200 20>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2003) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2004) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2005) 			qcom,msm_fastrpc_rpmsg {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2006) 				compatible = "qcom,msm-fastrpc-rpmsg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2007) 				qcom,glink-channels = "fastrpcglink-apps-dsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2008) 				qcom,intents = <0x64 64>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2009) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2010) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2011) 			qcom,adsp_glink_ssr {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2012) 				qcom,glink-channels = "glink_ssr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2013) 				qcom,notify-edges = <&glink_modem>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2014) 						    <&glink_cdsp>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2015) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2016) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2017) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2018) 		glink_cdsp: cdsp {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2019) 			qcom,remote-pid = <5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2020) 			transport = "smem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2021) 			mboxes = <&apcs_glb 28>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2022) 			mbox-names = "cdsp_smem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2023) 			interrupts = <GIC_SPI 261 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2024) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2025) 			label = "cdsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2026) 			qcom,glink-label = "cdsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2027) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2028) 			qcom,cdsp_qrtr {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2029) 				qcom,glink-channels = "IPCRTR";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2030) 				qcom,intents = <0x800  5
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2031) 						0x2000 3
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2032) 						0x4400 2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2033) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2034) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2035) 			qcom,msm_fastrpc_rpmsg {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2036) 				compatible = "qcom,msm-fastrpc-rpmsg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2037) 				qcom,glink-channels = "fastrpcglink-apps-dsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2038) 				qcom,intents = <0x64 64>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2039) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2040) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2041) 			qcom,msm_cdsprm_rpmsg {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2042) 				compatible = "qcom,msm-cdsprm-rpmsg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2043) 				qcom,glink-channels = "cdsprmglink-apps-dsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2044) 				qcom,intents = <0x20 12>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2045) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2046) 				msm_cdsp_rm: qcom,msm_cdsp_rm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2047) 					compatible = "qcom,msm-cdsp-rm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2048) 					qcom,qos-latency-us = <100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2049) 					qcom,qos-maxhold-ms = <20>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2050) 				};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2051) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2052) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2053) 			qcom,cdsp_glink_ssr {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2054) 				qcom,glink-channels = "glink_ssr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2055) 				qcom,notify-edges = <&glink_modem>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2056) 						    <&glink_adsp>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2057) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2058) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2059) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2060) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2061) 	qcom,glinkpkt {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2062) 		compatible = "qcom,glinkpkt";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2063) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2064) 		qcom,glinkpkt-at-mdm0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2065) 			qcom,glinkpkt-edge = "mpss";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2066) 			qcom,glinkpkt-ch-name = "DS";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2067) 			qcom,glinkpkt-dev-name = "at_mdm0";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2068) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2069) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2070) 		qcom,glinkpkt-apr-apps2 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2071) 			qcom,glinkpkt-edge = "adsp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2072) 			qcom,glinkpkt-ch-name = "apr_apps2";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2073) 			qcom,glinkpkt-dev-name = "apr_apps2";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2074) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2075) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2076) 		qcom,glinkpkt-data40-cntl {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2077) 			qcom,glinkpkt-edge = "mpss";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2078) 			qcom,glinkpkt-ch-name = "DATA40_CNTL";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2079) 			qcom,glinkpkt-dev-name = "smdcntl8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2080) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2081) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2082) 		qcom,glinkpkt-data1 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2083) 			qcom,glinkpkt-edge = "mpss";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2084) 			qcom,glinkpkt-ch-name = "DATA1";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2085) 			qcom,glinkpkt-dev-name = "smd7";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2086) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2087) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2088) 		qcom,glinkpkt-data4 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2089) 			qcom,glinkpkt-edge = "mpss";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2090) 			qcom,glinkpkt-ch-name = "DATA4";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2091) 			qcom,glinkpkt-dev-name = "smd8";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2092) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2093) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2094) 		qcom,glinkpkt-data11 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2095) 			qcom,glinkpkt-edge = "mpss";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2096) 			qcom,glinkpkt-ch-name = "DATA11";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2097) 			qcom,glinkpkt-dev-name = "smd11";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2098) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2099) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2100) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2101) 	qcom,smp2p_sleepstate {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2102) 		compatible = "qcom,smp2p-sleepstate";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2103) 		qcom,smem-states = <&sleepstate_smp2p_out 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2104) 		interrupt-parent = <&sleepstate_smp2p_in>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2105) 		interrupts = <0 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2106) 		interrupt-names = "smp2p-sleepstate-in";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2107) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2108) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2109) 	qcom,smp2p-modem {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2110) 		compatible = "qcom,smp2p";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2111) 		qcom,smem = <435>, <428>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2112) 		interrupts = <GIC_SPI 70 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2113) 		mboxes = <&apcs_glb 14>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2114) 		qcom,local-pid = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2115) 		qcom,remote-pid = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2116) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2117) 		modem_smp2p_out: master-kernel {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2118) 			qcom,entry-name = "master-kernel";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2119) 			#qcom,smem-state-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2120) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2121) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2122) 		modem_smp2p_in: slave-kernel {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2123) 			qcom,entry-name = "slave-kernel";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2124) 			interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2125) 			#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2126) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2127) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2128) 		smp2p_ipa_1_out: qcom,smp2p-ipa-1-out {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2129) 			qcom,entry-name = "ipa";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2130) 			#qcom,smem-state-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2131) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2132) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2133) 		/* ipa - inbound entry from mss */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2134) 		smp2p_ipa_1_in: qcom,smp2p-ipa-1-in {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2135) 			qcom,entry-name = "ipa";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2136) 			interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2137) 			#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2138) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2139) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2140) 		smp2p_wlan_1_in: qcom,smp2p-wlan-1-in {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2141) 			qcom,entry-name = "wlan";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2142) 			interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2143) 			#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2144) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2145) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2146) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2147) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2148) 	qcom,smp2p-adsp {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2149) 		compatible = "qcom,smp2p";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2150) 		qcom,smem = <443>, <429>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2151) 		interrupts = <GIC_SPI 279 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2152) 		mboxes = <&apcs_glb 10>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2153) 		qcom,local-pid = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2154) 		qcom,remote-pid = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2155) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2156) 		adsp_smp2p_out: master-kernel {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2157) 			qcom,entry-name = "master-kernel";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2158) 			#qcom,smem-state-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2159) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2160) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2161) 		adsp_smp2p_in: slave-kernel {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2162) 			qcom,entry-name = "slave-kernel";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2163) 			interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2164) 			#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2165) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2166) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2167) 		smp2p_rdbg2_out: qcom,smp2p-rdbg2-out {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2168) 			qcom,entry-name = "rdbg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2169) 			#qcom,smem-state-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2170) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2171) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2172) 		smp2p_rdbg2_in: qcom,smp2p-rdbg2-in {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2173) 			qcom,entry-name = "rdbg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2174) 			interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2175) 			#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2176) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2177) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2178) 		sleepstate_smp2p_out: sleepstate-out {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2179) 			qcom,entry-name = "sleepstate";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2180) 			#qcom,smem-state-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2181) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2182) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2183) 		sleepstate_smp2p_in: qcom,sleepstate-in {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2184) 			qcom,entry-name = "sleepstate_see";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2185) 			interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2186) 			#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2187) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2188) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2189) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2190) 	qcom,smp2p-cdsp {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2191) 		compatible = "qcom,smp2p";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2192) 		qcom,smem = <94>, <432>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2193) 		interrupts = <GIC_SPI 263 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2194) 		mboxes = <&apcs_glb 30>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2195) 		qcom,local-pid = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2196) 		qcom,remote-pid = <5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2197) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2198) 		cdsp_smp2p_out: master-kernel {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2199) 			qcom,entry-name = "master-kernel";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2200) 			#qcom,smem-state-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2201) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2202) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2203) 		cdsp_smp2p_in: slave-kernel {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2204) 			qcom,entry-name = "slave-kernel";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2205) 			interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2206) 			#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2207) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2208) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2209) 		smp2p_rdbg5_out: qcom,smp2p-rdbg5-out {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2210) 			qcom,entry-name = "rdbg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2211) 			#qcom,smem-state-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2212) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2213) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2214) 		smp2p_rdbg5_in: qcom,smp2p-rdbg5-in {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2215) 			qcom,entry-name = "rdbg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2216) 			interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2217) 			#interrupt-cells = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2218) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2219) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2220) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2221) 	qcom,sps {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2222) 		compatible = "qcom,msm-sps-4k";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2223) 		qcom,pipe-attr-ee;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2224) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2225) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2226) 	qfprom: qfprom@1b40000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2227) 		compatible = "qcom,qfprom";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2228) 		reg = <0x1b40000 0x7000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2229) 		#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2230) 		#size-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2231) 		read-only;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2232) 		ranges;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2233) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2234) 		stm_debug_fuse: stm@20f0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2235) 			reg = <0x20f0 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2236) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2237) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2238) 		feat_conf5: feat_conf5@6018 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2239) 			reg = <0x6018 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2240) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2241) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2242) 		feat_conf10: feat_conf10@602c {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2243) 			reg = <0x602c 0x4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2244) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2245) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2246) 		adsp_variant: adsp_variant@6011 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2247) 			reg = <0x6011 0x1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2248) 			bits = <3 1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2249) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2250) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2251) 		gpu_speed_bin: gpu_speed_bin@6006 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2252) 			reg = <0x6006 0x2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2253) 			bits = <5 8>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2254) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2255) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2256) 		gpu_gaming_bin: gpu_gaming_bin@602d {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2257) 			reg = <0x602d 0x1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2258) 			bits = <5 1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2259) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2260) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2261) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2262) 	spmi_bus: qcom,spmi@1c40000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2263) 		compatible = "qcom,spmi-pmic-arb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2264) 		reg = <0x1c40000 0x1100>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2265) 			<0x1e00000 0x2000000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2266) 			<0x3e00000 0x100000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2267) 			<0x3f00000 0xa0000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2268) 			<0x1c0a000 0x26000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2269) 		reg-names = "core", "chnls", "obsrvr", "intr", "cnfg";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2270) 		interrupt-names = "periph_irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2271) 		interrupts = <GIC_SPI 183 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2272) 		qcom,ee = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2273) 		qcom,channel = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2274) 		#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2275) 		#size-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2276) 		interrupt-controller;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2277) 		#interrupt-cells = <4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2278) 		cell-index = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2279) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2280) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2281) 	icnss: qcom,icnss@C800000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2282) 		compatible = "qcom,icnss";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2283) 		reg = <0xC800000 0x800000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2284) 		      <0xb0000000 0x10000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2285) 		reg-names = "membase", "smmu_iova_ipa";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2286) 		iommus = <&apps_smmu 0x1A0 0x1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2287) 		interrupts = <GIC_SPI 358 IRQ_TYPE_LEVEL_HIGH /* CE0 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2288) 			     <GIC_SPI 359 IRQ_TYPE_LEVEL_HIGH /* CE1 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2289) 			     <GIC_SPI 360 IRQ_TYPE_LEVEL_HIGH /* CE2 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2290) 			     <GIC_SPI 361 IRQ_TYPE_LEVEL_HIGH /* CE3 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2291) 			     <GIC_SPI 362 IRQ_TYPE_LEVEL_HIGH /* CE4 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2292) 			     <GIC_SPI 363 IRQ_TYPE_LEVEL_HIGH /* CE5 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2293) 			     <GIC_SPI 364 IRQ_TYPE_LEVEL_HIGH /* CE6 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2294) 			     <GIC_SPI 365 IRQ_TYPE_LEVEL_HIGH /* CE7 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2295) 			     <GIC_SPI 366 IRQ_TYPE_LEVEL_HIGH /* CE8 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2296) 			     <GIC_SPI 367 IRQ_TYPE_LEVEL_HIGH /* CE9 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2297) 			     <GIC_SPI 368 IRQ_TYPE_LEVEL_HIGH /* CE10 */ >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2298) 			     <GIC_SPI 369 IRQ_TYPE_LEVEL_HIGH /* CE11 */ >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2299) 		qcom,wlan-msa-fixed-region = <&wlan_msa_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2300) 		qcom,iommu-dma-addr-pool = <0xa0000000 0x10000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2301) 		qcom,iommu-dma = "fastmap";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2302) 		qcom,iommu-faults = "stall-disable";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2303) 		qcom,iommu-geometry = <0xa0000000 0x10010000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2304) 		vdd-cx-mx-supply = <&L8A>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2305) 		vdd-1.8-xo-supply = <&L16A>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2306) 		vdd-1.3-rfa-supply = <&L17A>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2307) 		vdd-3.3-ch0-supply = <&L23A>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2308) 		qcom,vdd-cx-mx-config = <640000 640000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2309) 		qcom,vdd-3.3-ch0-config = <3000000 3312000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2310) 		qcom,smp2p_map_wlan_1_in {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2311) 			interrupts-extended = <&smp2p_wlan_1_in 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2312) 					      <&smp2p_wlan_1_in 1 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2313) 			interrupt-names = "qcom,smp2p-force-fatal-error",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2314) 					  "qcom,smp2p-early-crash-ind";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2315) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2316) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2317) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2318) 	qcom,venus@5ab0000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2319) 		compatible = "qcom,pil-tz-generic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2320) 		reg = <0x5ab0000 0x20000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2321) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2322) 		vdd-supply = <&gcc_venus_gdsc>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2323) 		qcom,proxy-reg-names = "vdd";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2324) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2325) 		clocks = <&gcc GCC_VIDEO_VENUS_CTL_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2326) 			<&gcc GCC_VENUS_CTL_AXI_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2327) 			<&gcc GCC_VIDEO_AHB_CLK>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2328) 			<&gcc GCC_VIDEO_THROTTLE_CORE_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2329) 		clock-names = "core_clk", "bus_clk", "iface_clk", "throttle_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2330) 		qcom,proxy-clock-names = "core_clk", "bus_clk", "iface_clk", "throttle_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2331) 		qcom,mas-crypto = <&mas_crypto_c0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2332) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2333) 		qcom,core-freq = <240000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2334) 		qcom,ahb-freq = <240000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2335) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2336) 		qcom,pas-id = <9>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2337) 		qcom,msm-bus,name = "pil-venus";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2338) 		qcom,msm-bus,num-cases = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2339) 		qcom,msm-bus,num-paths = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2340) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2341) 			<63 512 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2342) 			<63 512 0 304000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2343) 		qcom,proxy-timeout-ms = <100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2344) 		qcom,firmware-name = "venus";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2345) 		memory-region = <&pil_video_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2346) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2347) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2348) 	cx_ipeak_lm: cx_ipeak@3ed000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2349) 		compatible = "qcom,cx-ipeak-v2";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2350) 		reg = <0x3ed000 0xe008>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2351) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2352) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2353) 	pil_modem: qcom,mss@6080000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2354) 		compatible = "qcom,pil-tz-generic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2355) 		reg = <0x6080000 0x100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2356) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2357) 		clocks = <&rpmcc CXO_SMD_PIL_MSS_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2358) 		clock-names = "xo";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2359) 		qcom,proxy-clock-names = "xo";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2360) 		qcom,mas-crypto = <&mas_crypto_c0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2361) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2362) 		vdd_cx-supply = <&VDD_CX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2363) 		qcom,vdd_cx-uV-uA = <RPMH_REGULATOR_LEVEL_TURBO 100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2364) 		qcom,proxy-reg-names = "vdd_cx";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2365) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2366) 		qcom,firmware-name = "modem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2367) 		memory-region = <&pil_modem_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2368) 		qcom,proxy-timeout-ms = <10000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2369) 		qcom,sysmon-id = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2370) 		qcom,ssctl-instance-id = <0x12>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2371) 		qcom,pas-id = <4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2372) 		qcom,smem-id = <421>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2373) 		qcom,minidump-id = <3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2374) 		qcom,aux-minidump-ids = <4>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2375) 		qcom,complete-ramdump;
f2c84a1c (<yangyan5@huaqin.com>     2020-08-16 10:05:41 +0800 2376) 		qcom,sequential-fw-load;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2377) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2378) 		qcom,msm-bus,name = "pil-modem";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2379) 		qcom,msm-bus,num-cases = <2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2380) 		qcom,msm-bus,num-paths = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2381) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2382) 			<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_EBI_CH0 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2383) 			<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_EBI_CH0 0 8171520>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2384) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2385) 		/* Inputs from mss */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2386) 		interrupts-extended = <&intc 0 307 1>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2387) 				<&modem_smp2p_in 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2388) 				<&modem_smp2p_in 2 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2389) 				<&modem_smp2p_in 1 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2390) 				<&modem_smp2p_in 3 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2391) 				<&modem_smp2p_in 7 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2392) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2393) 		interrupt-names = "qcom,wdog",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2394) 				"qcom,err-fatal",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2395) 				"qcom,proxy-unvote",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2396) 				"qcom,err-ready",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2397) 				"qcom,stop-ack",
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2398) 				"qcom,shutdown-ack";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2399) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2400) 		/* Outputs to mss */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2401) 		qcom,smem-states = <&modem_smp2p_out 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2402) 		qcom,smem-state-names = "qcom,force-stop";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2403) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2404) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2405) 	ddr_bw_opp_table: ddr-bw-opp-table {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2406) 		compatible = "operating-points-v2";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2407) 		BW_OPP_ENTRY_DDR( 200, 8, 0xA0); /* 1525 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2408) 		BW_OPP_ENTRY_DDR( 300, 8, 0xA0); /* 2288 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2409) 		BW_OPP_ENTRY_DDR( 451, 8, 0xA0); /* 3440 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2410) 		BW_OPP_ENTRY_DDR( 547, 8, 0xA0); /* 4173 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2411) 		BW_OPP_ENTRY_DDR( 681, 8, 0xA0); /* 5195 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2412) 		BW_OPP_ENTRY_DDR( 768, 8, 0xA0); /* 5859 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2413) 		BW_OPP_ENTRY_DDR( 931, 8, 0x20); /* 7102 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2414) 		BW_OPP_ENTRY_DDR(1017, 8, 0x80); /* 7759 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2415) 		BW_OPP_ENTRY_DDR(1353, 8, 0x80); /*10322 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2416) 		BW_OPP_ENTRY_DDR(1555, 8, 0x80); /*11863 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2417) 		BW_OPP_ENTRY_DDR(1804, 8, 0x80); /*13763 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2418) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2419) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2420) 	suspendable_ddr4_bw_opp_table: suspendable-ddr4-bw-opp-table {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2421) 		compatible = "operating-points-v2";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2422) 		BW_OPP_ENTRY_DDR(   0, 8, 0xA0); /*    0 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2423) 		BW_OPP_ENTRY_DDR( 200, 8, 0xA0); /* 1525 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2424) 		BW_OPP_ENTRY_DDR( 300, 8, 0xA0); /* 2288 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2425) 		BW_OPP_ENTRY_DDR( 451, 8, 0xA0); /* 3440 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2426) 		BW_OPP_ENTRY_DDR( 547, 8, 0xA0); /* 4173 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2427) 		BW_OPP_ENTRY_DDR( 681, 8, 0xA0); /* 5195 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2428) 		BW_OPP_ENTRY_DDR( 768, 8, 0xA0); /* 5859 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2429) 		BW_OPP_ENTRY_DDR( 931, 8, 0x20); /* 7102 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2430) 		BW_OPP_ENTRY_DDR(1017, 8, 0x80); /* 7759 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2431) 		BW_OPP_ENTRY_DDR(1353, 8, 0x80); /*10322 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2432) 		BW_OPP_ENTRY_DDR(1555, 8, 0x80); /*11863 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2433) 		BW_OPP_ENTRY_DDR(1804, 8, 0x80); /*13763 MB/s */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2434) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2435) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2436) 	cpu_cpu_ddr_bw: qcom,cpu-cpu-ddr-bw {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2437) 		compatible = "qcom,devbw-ddr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2438) 		governor = "performance";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2439) 		qcom,src-dst-ports =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2440) 			<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_EBI_CH0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2441) 		qcom,active-only;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2442) 		operating-points-v2 = <&ddr_bw_opp_table>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2443) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2444) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2445) 	cpu_cpu_ddr_bwmon: qcom,cpu-cpu-ddr-bwmon@01b8e200 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2446) 		compatible = "qcom,bimc-bwmon4";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2447) 		reg = <0x01b8e300 0x100>, <0x01b8e200 0x100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2448) 		reg-names = "base", "global_base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2449) 		interrupts = <GIC_SPI 421 IRQ_TYPE_LEVEL_HIGH>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2450) 		qcom,mport = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2451) 		qcom,hw-timer-hz = <19200000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2452) 		qcom,target-dev = <&cpu_cpu_ddr_bw>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2453) 		qcom,count-unit = <0x10000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2454) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2455) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2456) 	cpu0_cpu_ddr_latfloor: qcom,cpu0-cpu-ddr-latfloor {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2457) 		compatible = "qcom,devbw-ddr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2458) 		governor = "performance";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2459) 		qcom,src-dst-ports =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2460) 			<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_EBI_CH0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2461) 		qcom,active-only;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2462) 		operating-points-v2 = <&ddr_bw_opp_table>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2463) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2464) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2465) 	cpu0_cpu_ddr_lat: qcom,cpu0-cpu-ddr-lat {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2466) 		compatible = "qcom,devbw-ddr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2467) 		governor = "performance";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2468) 		qcom,src-dst-ports =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2469) 			<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_EBI_CH0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2470) 		qcom,active-only;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2471) 		operating-points-v2 = <&ddr_bw_opp_table>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2472) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2473) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2474) 	cpu0_memlat_cpugrp: qcom,cpu0-cpugrp {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2475) 		compatible = "qcom,arm-memlat-cpugrp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2476) 		qcom,cpulist = <&CPU0 &CPU1 &CPU2 &CPU3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2477) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2478) 		cpu0_cpu_ddr_latmon: qcom,cpu0-cpu-ddr-latmon {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2479) 			compatible = "qcom,arm-memlat-mon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2480) 			qcom,cpulist = <&CPU0 &CPU1 &CPU2 &CPU3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2481) 			qcom,target-dev = <&cpu0_cpu_ddr_lat>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2482) 			qcom,cachemiss-ev = <0x17>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2483) 			qcom,stall-cycle-ev = <0xE7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2484) 			ddr3-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2485) 				qcom,ddr-type = <DDR_TYPE_LPDDR3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2486) 				qcom,core-dev-table =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2487) 					<  864000 MHZ_TO_MBPS(200, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2488) 					< 1305600 MHZ_TO_MBPS(451, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2489) 					< 1804800 MHZ_TO_MBPS(768, 8) >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2490) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2491) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2492) 			ddr4-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2493) 				qcom,ddr-type = <DDR_TYPE_LPDDR4X>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2494) 				qcom,core-dev-table =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2495) 					<  864000 MHZ_TO_MBPS( 300, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2496) 					< 1305600 MHZ_TO_MBPS( 547, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2497) 					< 1420000 MHZ_TO_MBPS( 768, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2498) 					< 1804800 MHZ_TO_MBPS(1017, 8) >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2499) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2500) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2501) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2502) 		cpu0_computemon: qcom,cpu0-computemon {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2503) 			compatible = "qcom,arm-compute-mon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2504) 			qcom,cpulist = <&CPU0 &CPU1 &CPU2 &CPU3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2505) 			qcom,target-dev = <&cpu0_cpu_ddr_latfloor>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2506) 			ddr3-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2507) 				qcom,ddr-type = <DDR_TYPE_LPDDR3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2508) 				qcom,core-dev-table =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2509) 					<  614400 MHZ_TO_MBPS( 200, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2510) 					< 1305600 MHZ_TO_MBPS( 451, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2511) 					< 1804800 MHZ_TO_MBPS( 768, 8) >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2512) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2513) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2514) 			ddr4-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2515) 				qcom,ddr-type = <DDR_TYPE_LPDDR4X>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2516) 				qcom,core-dev-table =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2517) 					<  614400 MHZ_TO_MBPS( 300, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2518) 					< 1017600 MHZ_TO_MBPS( 451, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2519) 					< 1420000 MHZ_TO_MBPS( 547, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2520) 					< 1804800 MHZ_TO_MBPS( 768, 8) >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2521) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2522) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2523) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2524) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2525) 	cpu4_cpu_ddr_lat: qcom,cpu4-cpu-ddr-lat {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2526) 		compatible = "qcom,devbw-ddr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2527) 		governor = "performance";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2528) 		qcom,src-dst-ports =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2529) 			<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_EBI_CH0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2530) 		qcom,active-only;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2531) 		operating-points-v2 = <&ddr_bw_opp_table>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2532) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2533) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2534) 	cpu4_cpu_ddr_latfloor: qcom,cpu4-cpu-ddr-latfloor {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2535) 		compatible = "qcom,devbw-ddr";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2536) 		governor = "performance";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2537) 		qcom,src-dst-ports =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2538) 			<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_EBI_CH0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2539) 		qcom,active-only;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2540) 		operating-points-v2 = <&ddr_bw_opp_table>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2541) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2542) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2543) 	cpu4_memlat_cpugrp: qcom,cpu4-cpugrp {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2544) 		compatible = "qcom,arm-memlat-cpugrp";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2545) 		qcom,cpulist = <&CPU4 &CPU5 &CPU6 &CPU7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2546) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2547) 		cpu4_cpu_ddr_latmon: qcom,cpu4-cpu-ddr-latmon {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2548) 			compatible = "qcom,arm-memlat-mon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2549) 			qcom,cpulist = <&CPU4 &CPU5 &CPU6 &CPU7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2550) 			qcom,target-dev = <&cpu4_cpu_ddr_lat>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2551) 			qcom,cachemiss-ev = <0x17>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2552) 			qcom,stall-cycle-ev = <0x24>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2553) 			ddr3-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2554) 				qcom,ddr-type = <DDR_TYPE_LPDDR3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2555) 				qcom,core-dev-table =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2556) 					< 1056000 MHZ_TO_MBPS(200, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2557) 					< 1401600 MHZ_TO_MBPS(451, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2558) 					< 1804800 MHZ_TO_MBPS(768, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2559) 					< 2016000 MHZ_TO_MBPS(931, 8) >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2560) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2561) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2562) 			ddr4-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2563) 				qcom,ddr-type = <DDR_TYPE_LPDDR4X>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2564) 				qcom,core-dev-table =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2565) 					<  902400 MHZ_TO_MBPS( 451, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2566) 					< 1401600 MHZ_TO_MBPS(1017, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2567) 					< 1804800 MHZ_TO_MBPS(1555, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2568) 					< 2016000 MHZ_TO_MBPS(1804, 8) >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2569) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2570) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2571) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2572) 		cpu4_computemon: qcom,cpu4-computemon {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2573) 			compatible = "qcom,arm-compute-mon";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2574) 			qcom,cpulist = <&CPU4 &CPU5 &CPU6 &CPU7>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2575) 			qcom,target-dev = <&cpu4_cpu_ddr_latfloor>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2576) 			ddr3-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2577) 				qcom,ddr-type = <DDR_TYPE_LPDDR3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2578) 				qcom,core-dev-table =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2579) 					<  652800 MHZ_TO_MBPS( 200, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2580) 					< 1056000 MHZ_TO_MBPS( 451, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2581) 					< 1401600 MHZ_TO_MBPS( 547, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2582) 					< 1536000 MHZ_TO_MBPS( 768, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2583) 					< 2016000 MHZ_TO_MBPS( 931, 8) >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2584) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2585) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2586) 			ddr4-map {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2587) 				qcom,ddr-type = <DDR_TYPE_LPDDR4X>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2588) 				qcom,core-dev-table =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2589) 					<  902400 MHZ_TO_MBPS( 300, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2590) 					< 1056000 MHZ_TO_MBPS( 547, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2591) 					< 1401680 MHZ_TO_MBPS( 768, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2592) 					< 1804800 MHZ_TO_MBPS(1017, 8) >,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2593) 					< 2016000 MHZ_TO_MBPS(1804, 8) >;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2594) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2595) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2596) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2597) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2598) 	qcom,msm_gsi {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2599) 		compatible = "qcom,msm_gsi";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2600) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2601) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2602) 	qcom,rmnet-ipa {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2603) 		compatible = "qcom,rmnet-ipa3";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2604) 		qcom,rmnet-ipa-ssr;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2605) 		qcom,ipa-platform-type-msm;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2606) 		qcom,ipa-advertise-sg-support;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2607) 		qcom,ipa-napi-enable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2608) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2609) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2610) 	ipa_hw: qcom,ipa@0x5800000 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2611) 		compatible = "qcom,ipa";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2612) 		reg = <0x5800000 0x34000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2613) 			<0x5804000 0x28000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2614) 		reg-names = "ipa-base", "gsi-base";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2615) 		interrupts = <0 257 0>, <0 259 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2616) 		interrupt-names = "ipa-irq", "gsi-irq";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2617) 		qcom,ipa-hw-ver = <16>; /* IPA core version = IPAv4.2 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2618) 		qcom,ipa-hw-mode = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2619) 		qcom,platform-type = <1>; /* MSM platform */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2620) 		qcom,ee = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2621) 		qcom,use-ipa-tethering-bridge;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2622) 		qcom,modem-cfg-emb-pipe-flt;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2623) 		qcom,ipa-wdi2;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2624) 		qcom,ipa-wdi2_over_gsi;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2625) 		qcom,ipa-endp-delay-wa;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2626) 		qcom,ipa-fltrt-not-hashable;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2627) 		qcom,use-64-bit-dma-mask;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2628) 		qcom,arm-smmu;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2629) 		qcom,smmu-fast-map;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2630) 		qcom,use-ipa-pm;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2631) 		qcom,skip-ieob-mask-wa;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2632) 		clocks = <&rpmcc RPM_SMD_IPA_CLK>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2633) 		clock-names = "core_clk";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2634) 		qcom,msm-bus,name = "ipa";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2635) 		qcom,msm-bus,num-cases = <5>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2636) 		qcom,msm-bus,num-paths = <3>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2637) 		qcom,msm-bus,vectors-KBps =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2638) 		/* No vote */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2639) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_EBI_CH0 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2640) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_OCIMEM 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2641) 		<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_IPA_CFG 0 0>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2642) 		/* SVS2 */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2643) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_EBI_CH0 80000 465000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2644) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_OCIMEM 80000 68570>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2645) 		<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_IPA_CFG 80000 30>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2646) 		/* SVS */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2647) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_EBI_CH0 80000 2000000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2648) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_OCIMEM 80000 267461>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2649) 		<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_IPA_CFG 80000 109890>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2650) 		/* NOMINAL */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2651) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_EBI_CH0  206000 4000000>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2652) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_OCIMEM 206000 712961>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2653) 		<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_IPA_CFG 206000 491520>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2654) 		/* TURBO */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2655) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_EBI_CH0 206000 5598900>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2656) 		<MSM_BUS_MASTER_IPA MSM_BUS_SLAVE_OCIMEM 206000 1436481>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2657) 		<MSM_BUS_MASTER_AMPSS_M0 MSM_BUS_SLAVE_IPA_CFG 206000 491520>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2658) 		qcom,bus-vector-names =
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2659) 				"MIN", "SVS2", "SVS", "NOMINAL", "TURBO";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2660) 		qcom,throughput-threshold = <310 600 1000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2661) 		qcom,scaling-exceptions = <>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2662) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2663) 		/* smp2p information */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2664) 		qcom,smp2p_map_ipa_1_out {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2665) 			compatible = "qcom,smp2p-map-ipa-1-out";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2666) 		qcom,smem-states = <&smp2p_ipa_1_out 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2667) 			qcom,smem-state-names = "ipa-smp2p-out";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2668) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2669) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2670) 		qcom,smp2p_map_ipa_1_in {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2671) 			compatible = "qcom,smp2p-map-ipa-1-in";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2672) 			interrupts-extended = <&smp2p_ipa_1_in 0 0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2673) 			interrupt-names = "ipa-smp2p-in";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2674) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2675) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2676) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2677) 	ipa_smmu_ap: ipa_smmu_ap {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2678) 		compatible = "qcom,ipa-smmu-ap-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2679) 		iommus = <&apps_smmu 0x0140 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2680) 		qcom,iommu-dma-addr-pool = <0x10000000 0x30000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2681) 		/* modem tables in IMEM */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2682) 		qcom,iommu-dma = "fastmap";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2683) 		qcom,additional-mapping = <0x0c123000 0x0c123000 0x2000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2684) 		qcom,iommu-geometry = <0 0xB0000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2685) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2686) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2687) 	ipa_smmu_wlan: ipa_smmu_wlan {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2688) 		compatible = "qcom,ipa-smmu-wlan-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2689) 		iommus = <&apps_smmu 0x0141 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2690) 		/* ipa-uc ram */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2691) 		qcom,iommu-dma = "atomic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2692) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2693) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2694) 	ipa_smmu_uc: ipa_smmu_uc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2695) 		compatible = "qcom,ipa-smmu-uc-cb";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2696) 		iommus = <&apps_smmu 0x0142 0x0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2697) 		qcom,iommu-dma-addr-pool = <0x40400000 0x1fc00000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2698) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2699) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2700) 	qcom,ipa_fws {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2701) 		compatible = "qcom,pil-tz-generic";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2702) 		qcom,pas-id = <0xf>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2703) 		qcom,firmware-name = "ipa_fws";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2704) 		qcom,pil-force-shutdown;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2705) 		memory-region = <&pil_ipa_fw_mem>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2706) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2707) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2708) 	qcom,demux {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2709) 		compatible = "qcom,demux";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2710) 	};
02758262 (<LiZheng6@huaqin.com>     2020-07-19 17:40:58 +0800 2711) 
02758262 (<LiZheng6@huaqin.com>     2020-07-19 17:40:58 +0800 2712) 	simtray {
02758262 (<LiZheng6@huaqin.com>     2020-07-19 17:40:58 +0800 2713) 		compatible = "xiaomi,simtray-status";
02758262 (<LiZheng6@huaqin.com>     2020-07-19 17:40:58 +0800 2714) 		status-gpio = <&tlmm 79 0x00>;
02758262 (<LiZheng6@huaqin.com>     2020-07-19 17:40:58 +0800 2715) 	};
85bfc218 (<lizheng6@huaqin.com>     2020-08-04 11:21:48 +0800 2716) 
85bfc218 (<lizheng6@huaqin.com>     2020-08-04 11:21:48 +0800 2717) 	dpdt {
85bfc218 (<lizheng6@huaqin.com>     2020-08-04 11:21:48 +0800 2718)                 compatible = "xiaomi,dpdt-status";
85bfc218 (<lizheng6@huaqin.com>     2020-08-04 11:21:48 +0800 2719)                 status-gpio = <&tlmm 44 0x00>;
85bfc218 (<lizheng6@huaqin.com>     2020-08-04 11:21:48 +0800 2720)         };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2721) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2722) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2723) #include "bengal-gdsc.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2724) #include "bengal-usb.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2725) #include "bengal-ion.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2726) #include "bengal-coresight.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2727) #include "bengal-bus.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2728) #include "bengal-vidc.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2729) #include "pmi632.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2730) #include "pm6125.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2731) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2732) &gcc_camss_top_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2733) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2734) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2735) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2736) &gcc_ufs_phy_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2737) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2738) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2739) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2740) &gcc_usb30_prim_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2741) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2742) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2743) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2744) &gcc_vcodec0_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2745) 	qcom,support-hw-trigger;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2746) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2747) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2748) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2749) &gcc_venus_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2750) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2751) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2752) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2753) &hlos1_vote_turing_mmu_tbu1_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2754) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2755) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2756) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2757) &hlos1_vote_turing_mmu_tbu0_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2758) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2759) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2760) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2761) &hlos1_vote_mm_snoc_mmu_tbu_rt_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2762) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2763) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2764) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2765) &hlos1_vote_mm_snoc_mmu_tbu_nrt_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2766) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2767) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2768) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2769) &mdss_core_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2770) 	qcom,support-hw-trigger;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2771) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2772) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2773) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2774) &gpu_cx_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2775) 	parent-supply = <&VDD_CX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2776) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2777) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2778) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2779) &gpu_gx_gdsc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2780) 	parent-supply = <&VDD_CX_LEVEL>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2781) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2782) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2783) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2784) #include "msm-arm-smmu-bengal.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2785) #include "pm6125-rpm-regulator.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2786) #include "bengal-regulator.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2787) #include "bengal-pm.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2788) #include "bengal-pinctrl.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2789) #include "bengal-qupv3.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2790) #include "bengal-gpu.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2791) #include "bengal-audio.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2792) #include "bengal-sde-pll.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2793) #include "bengal-sde.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2794) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2795) &qupv3_se1_i2c {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2796) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2797) 	#include "pm8008.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2798) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2799) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2800) &pm8008_8 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2801) 	/* PM8008 IRQ STAT */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2802) 	interrupt-parent = <&tlmm>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2803) 	interrupts = <25 IRQ_TYPE_EDGE_RISING>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2804) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2805) 	pinctrl-names = "default";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2806) 	pinctrl-0 = <&pm8008_active &pm8008_interrupt>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2807) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2808) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2809) &pm8008_regulators {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2810) 	vdd_l1_l2-supply = <&S6A>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2811) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2812) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2813) &L1P {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2814) 	regulator-max-microvolt = <1200000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2815) 	qcom,min-dropout-voltage = <100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2816) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2817) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2818) &L2P {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2819) 	regulator-max-microvolt = <1056000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2820) 	qcom,min-dropout-voltage = <100000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2821) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2822) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2823) &L3P {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2824) 	regulator-min-microvolt = <2800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2825) 	regulator-max-microvolt = <2800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2826) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2827) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2828) &L4P {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2829) 	regulator-min-microvolt = <2800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2830) 	regulator-max-microvolt = <2800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2831) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2832) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2833) &L5P {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2834) 	regulator-min-microvolt = <2800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2835) 	regulator-max-microvolt = <2800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2836) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2837) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2838) &L6P {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2839) 	regulator-min-microvolt = <2800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2840) 	regulator-max-microvolt = <2800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2841) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2842) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2843) &L7P {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2844) 	regulator-min-microvolt = <1800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2845) 	regulator-max-microvolt = <1800000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2846) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2847) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2848) &qupv3_se4_2uart {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2849) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2850) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2851) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2852) &qupv3_se3_4uart {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2853) 	status = "ok";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2854) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2855) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2856) &pm6125_vadc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2857) 	#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2858) 	#size-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2859) 	pinctrl-names = "default";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2860) 	pinctrl-0 = <&camera_therm_default &emmc_therm_default>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2861) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2862) 	pa_therm0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2863) 		reg = <ADC_AMUX_THM1_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2864) 		label = "pa_therm0";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2865) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2866) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2867) 		qcom,pre-scaling = <1 1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2868) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2869) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2870) 	quiet_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2871) 		reg = <ADC_AMUX_THM2_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2872) 		label = "quiet_therm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2873) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2874) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2875) 		qcom,pre-scaling = <1 1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2876) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2877) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2878) 	camera_flash_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2879) 		reg = <ADC_GPIO1_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2880) 		label = "camera_flash_therm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2881) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2882) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2883) 		qcom,pre-scaling = <1 1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2884) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2885) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2886) 	emmc_ufs_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2887) 		reg = <ADC_GPIO2_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2888) 		label = "emmc_ufs_therm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2889) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2890) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2891) 		qcom,pre-scaling = <1 1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2892) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2893) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2894) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2895) &pm6125_gpios {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2896) 	camera_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2897) 		camera_therm_default: camera_therm_default {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2898) 			pins = "gpio3";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2899) 			bias-high-impedance;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2900) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2901) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2902) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2903) 	emmc_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2904) 		emmc_therm_default: emmc_therm_default {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2905) 			pins = "gpio4";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2906) 			bias-high-impedance;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2907) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2908) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2909) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2910) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2911) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2912) &spmi_bus {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2913) 	qcom,pm6125@0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2914) 		pm6125_adc_tm_iio: adc_tm@3400 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2915) 			compatible = "qcom,adc-tm5-iio";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2916) 			reg = <0x3400 0x100>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2917) 			#thermal-sensor-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2918) 			#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2919) 			#size-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2920) 			io-channels = <&pm6125_vadc ADC_GPIO1_PU2>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2921) 					<&pm6125_vadc ADC_GPIO2_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2922) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2923) 			camera_flash_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2924) 				reg = <ADC_GPIO1_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2925) 				qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2926) 				qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2927) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2928) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2929) 			emmc_ufs_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2930) 				reg = <ADC_GPIO2_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2931) 				qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2932) 				qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2933) 			};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2934) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2935) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2936) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2937) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2938) &pm6125_adc_tm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2939) 	#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2940) 	#size-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2941) 	io-channels = <&pm6125_vadc ADC_AMUX_THM1_PU2>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2942) 			<&pm6125_vadc ADC_AMUX_THM2_PU2>,
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2943) 			<&pm6125_vadc ADC_XO_THERM_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2944) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2945) 	/* Channel nodes */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2946) 	pa_therm0 {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2947) 		reg = <ADC_AMUX_THM1_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2948) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2949) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2950) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2951) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2952) 	quiet_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2953) 		reg = <ADC_AMUX_THM2_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2954) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2955) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2956) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2957) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2958) 	xo_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2959) 		reg = <ADC_XO_THERM_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2960) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2961) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2962) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2963) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2964) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2965) &pmi632_vadc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2966) 	#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2967) 	#size-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2968) 	pinctrl-names = "default";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2969) 	pinctrl-0 = <&conn_therm_default &skin_therm_default>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2970) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2971) 	conn_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2972) 		reg = <ADC_GPIO1_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2973) 		label = "conn_therm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2974) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2975) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2976) 		qcom,pre-scaling = <1 1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2977) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2978) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2979) 	skin_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2980) 		reg = <ADC_GPIO2_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2981) 		label = "skin_therm";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2982) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2983) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2984) 		qcom,pre-scaling = <1 1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2985) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2986) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2987) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2988) &pmi632_gpios {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2989) 	conn_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2990) 		conn_therm_default: conn_therm_default {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2991) 			pins = "gpio1";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2992) 			bias-high-impedance;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2993) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2994) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2995) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2996) 	skin_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2997) 		skin_therm_default: skin_therm_default {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2998) 			pins = "gpio3";
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 2999) 			bias-high-impedance;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3000) 		};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3001) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3002) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3003) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3004) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3005) &pmi632_adc_tm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3006) 	#address-cells = <1>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3007) 	#size-cells = <0>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3008) 	io-channels = <&pmi632_vadc ADC_GPIO2_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3009) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3010) 	/* Channel nodes */
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3011) 	skin_therm {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3012) 		reg = <ADC_GPIO2_PU2>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3013) 		qcom,ratiometric;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3014) 		qcom,hw-settle-time = <200>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3015) 	};
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3016) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3017) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3018) &msm_vidc {
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3019) 	qcom,cx-ipeak-data = <&cx_ipeak_lm 6>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3020) 	qcom,clock-freq-threshold = <300000000>;
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3021) };
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3022) 
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3023) &qupv3_se0_spi {
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3024) 	status = "ok";
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3025) 	irled@0 {
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3026) 		compatible = "ir-spi";
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3027) 		reg = <0x0>;
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3028) 		//vdd-supply = <&pm6125_l24>; //vdd
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3029) 		status = "ok";
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3030) 		spi-max-frequency = <19200000>;
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3031) 	};
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3032) };
da6555f5 (<wuqingsi@huaqin.com>     2020-07-09 15:56:38 +0800 3033) 
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3034) #include "bengal-thermal.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3035) #include "camera/bengal-camera.dtsi"
7bf71a6b (<yangyan5@huaqin.com>     2020-06-22 18:50:20 +0800 3036) #include "msm-rdbg.dtsi"
